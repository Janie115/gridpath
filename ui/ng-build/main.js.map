{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/home.service.ts","webpack:///./src/app/scenario-detail/scenario-detail.component.css","webpack:///./src/app/scenario-detail/scenario-detail.component.html","webpack:///./src/app/scenario-detail/scenario-detail.component.ts","webpack:///./src/app/scenario-detail/scenario-detail.service.ts","webpack:///./src/app/scenario-new/scenario-new.component.css","webpack:///./src/app/scenario-new/scenario-new.component.html","webpack:///./src/app/scenario-new/scenario-new.component.ts","webpack:///./src/app/scenario-new/scenario-new.service.ts","webpack:///./src/app/scenarios/scenarios.component.css","webpack:///./src/app/scenarios/scenarios.component.html","webpack:///./src/app/scenarios/scenarios.component.ts","webpack:///./src/app/scenarios/scenarios.service.ts","webpack:///./src/app/settings/settings.component.css","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAED;AACe;AAEhB;AAEN;AACmB;AAElE,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,kGAAuB,EAAE;IAC5D,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,yFAAoB,EAAE;IACzD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,OAAO;QACnB,SAAS,EAAE,MAAM;KAClB;CACF,CAAC;AAYF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAV5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAClB,SAAS,EACT,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,8BAA8B;iBACvD;aACF;YACD,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OAEW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACjC7B,0CAA0C,0BAA0B,cAAc,eAAe,qBAAqB,mCAAmC,GAAG,MAAM,gBAAgB,GAAG,QAAQ,mBAAmB,iBAAiB,uBAAuB,uBAAuB,0BAA0B,GAAG,2BAA2B,qCAAqC,GAAG,gBAAgB,gCAAgC,GAAG,+CAA+C,mgC;;;;;;;;;;;ACAjd,wBAAwB,OAAO,0rB;;;;;;;;;;;;;;;;;ACAW;AAS1C;IANA;QAOE,UAAK,GAAG,qBAAqB,CAAC;IAChC,CAAC;IAFY,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OAEW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACI,CAAC,yBAAyB;AAChB;AACC;AACH;AAGN;AACsB;AACH;AACoB;AACT;AACvB;AAsBtD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAnBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,iFAAkB;gBAClB,8EAAiB;gBACjB,kGAAuB;gBACvB,0FAAoB;gBACpB,mEAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,oEAAgB;gBAChB,kEAAmB;aACpB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnCtB,+DAA+D,uI;;;;;;;;;;;ACA/D,qDAAqD,cAAc,qJ;;;;;;;;;;;;;;;;;;ACAjB;AACN;AAE5C,IAAM,QAAQ,GAAS,MAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAOnD;IAIE,uBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC5C,CAAC;IAED,gCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IAChC,CAAC;IAED,uCAAe,GAAf;QAAA,iBAUC;QATC,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QACxC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;aAC5B,SAAS,CACR,gBAAM,IAAI,YAAI,CAAC,YAAY,GAAG,MAAM,EAA1B,CAA0B,EACpC,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;YACxC,KAAI,CAAC,YAAY,GAAG,MAAM;QAC5B,CAAC,CACF,CAAC;IACN,CAAC;IAED,0CAAkB,GAAlB,UAAmB,KAAK;QACtB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IA3BU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;+EAKiC,yDAAW;OAJjC,aAAa,CA4BzB;IAAD,oBAAC;CAAA;AA5ByB;;;;;;;;;;;;;;;;;;;ACViB;AACO;AAOlD;IAEE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAE5B,cAAS,GAAG,qCAAqC,CAAC;IAFlB,CAAC;IAIzC,kCAAY,GAAZ;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACnD,OAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/C,CAAC;IATU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,WAAW,CAUvB;IAAD,kBAAC;CAAA;AAVuB;;;;;;;;;;;;ACRxB,6FAA6F,mCAAmC,iBAAiB,GAAG,6BAA6B,mBAAmB,uBAAuB,GAAG,wCAAwC,8BAA8B,GAAG,qCAAqC,qCAAqC,GAAG,8BAA8B,sBAAsB,qBAAqB,qBAAqB,uBAAuB,GAAG,qBAAqB,yBAAyB,uBAAuB,sBAAsB,sBAAsB,qBAAqB,sBAAsB,qBAAqB,2BAA2B,+BAA+B,mBAAmB,+CAA+C,2nD;;;;;;;;;;;ACAzxB,wBAAwB,yBAAyB,2OAA2O,SAAS,oBAAoB,UAAU,+PAA+P,SAAS,oBAAoB,UAAU,0QAA0Q,SAAS,oBAAoB,UAAU,qPAAqP,SAAS,oBAAoB,UAAU,8QAA8Q,SAAS,oBAAoB,UAAU,8RAA8R,SAAS,oBAAoB,UAAU,yPAAyP,SAAS,oBAAoB,UAAU,wRAAwR,SAAS,oBAAoB,UAAU,wSAAwS,SAAS,oBAAoB,UAAU,sRAAsR,SAAS,oBAAoB,UAAU,8RAA8R,SAAS,oBAAoB,UAAU,oQAAoQ,SAAS,oBAAoB,UAAU,wQAAwQ,SAAS,oBAAoB,UAAU,iQAAiQ,SAAS,oBAAoB,UAAU,qQAAqQ,SAAS,oBAAoB,UAAU,2PAA2P,SAAS,oBAAoB,UAAU,yQAAyQ,SAAS,oBAAoB,UAAU,4OAA4O,SAAS,oBAAoB,UAAU,yPAAyP,SAAS,oBAAoB,UAAU,4OAA4O,SAAS,oBAAoB,UAAU,iQAAiQ,SAAS,oBAAoB,UAAU,4L;;;;;;;;;;;;;;;;;;;;ACA5pM;AACD;AACN;AAE3C,IAAM,QAAQ,GAAS,MAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAGc;AAQjE;IA2BE,iCAAoB,KAAqB,EAC/B,qBAA4C,EAC5C,QAAkB;QAFR,UAAK,GAAL,KAAK,CAAgB;QAC/B,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,aAAQ,GAAR,QAAQ,CAAU;IAC5B,CAAC;IAED,0CAAQ,GAAR;QAAA,iBA6BC;QA5BC,uEAAuE;QACvE,oDAAoD;QACpD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAC1C,KAAI,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,oBAAkB,KAAI,CAAC,EAAI,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACxC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACxC,IAAI,CAAC,mCAAmC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAClD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC9C,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,qCAAqC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,oCAAoC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,wCAAwC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACvD,IAAI,CAAC,oCAAoC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACxC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnC,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,sDAAoB,GAApB,UAAqB,EAAE;QAAvB,iBAGC;QAFC,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,EAAE,CAAC;aAChD,SAAS,CAAC,wBAAc,IAAI,YAAI,CAAC,cAAc,GAAG,cAAc,EAApC,CAAoC,CAAC,CAAC;IACvE,CAAC;IAED,2DAAyB,GAAzB,UAA0B,EAAE;QAA5B,iBAKC;QAJC,IAAI,CAAC,qBAAqB,CAAC,yBAAyB,CAAC,EAAE,CAAC;aACrD,SAAS,CACR,wBAAc,IAAI,YAAI,CAAC,sBAAsB,GAAG,cAAc,EAA5C,CAA4C,CAC/D,CAAC;IACN,CAAC;IAED,2DAAyB,GAAzB,UAA0B,EAAE;QAA5B,iBAKC;QAJC,IAAI,CAAC,qBAAqB,CAAC,yBAAyB,CAAC,EAAE,CAAC;aACrD,SAAS,CACR,wBAAc,IAAI,YAAI,CAAC,sBAAsB,GAAG,cAAc,EAA5C,CAA4C,CAC/D,CAAC;IACN,CAAC;IAED,qEAAmC,GAAnC,UAAoC,EAAE;QAAtC,iBAMC;QALC,IAAI,CAAC,qBAAqB,CAAC,mCAAmC,CAAC,EAAE,CAAC;aAC/D,SAAS,CACR,wBAAc;YACZ,YAAI,CAAC,gCAAgC,GAAG,cAAc;QAAtD,CAAsD,CACzD,CAAC;IACN,CAAC;IAED,uDAAqB,GAArB,UAAsB,EAAE;QAAxB,iBAKC;QAJC,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,EAAE,CAAC;aACjD,SAAS,CACR,wBAAc,IAAI,YAAI,CAAC,kBAAkB,GAAG,cAAc,EAAxC,CAAwC,CAC3D,CAAC;IACN,CAAC;IAED,kEAAgC,GAAhC,UAAiC,EAAE;QAAnC,iBAMC;QALC,IAAI,CAAC,qBAAqB,CAAC,gCAAgC,CAAC,EAAE,CAAC;aAC5D,SAAS,CACR,wBAAc;YACZ,YAAI,CAAC,6BAA6B,GAAG,cAAc;QAAnD,CAAmD,CACtD,CAAC;IACN,CAAC;IAED,iEAA+B,GAA/B,UAAgC,EAAE;QAAlC,iBAMC;QALC,IAAI,CAAC,qBAAqB,CAAC,+BAA+B,CAAC,EAAE,CAAC;aAC3D,SAAS,CACR,wBAAc;YACZ,YAAI,CAAC,4BAA4B,GAAG,cAAc;QAAlD,CAAkD,CACrD,CAAC;IACN,CAAC;IAED,wDAAsB,GAAtB,UAAuB,EAAE;QAAzB,iBAMC;QALC,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,EAAE,CAAC;aAClD,SAAS,CACR,wBAAc;YACZ,YAAI,CAAC,mBAAmB,GAAG,cAAc;QAAzC,CAAyC,CAC5C,CAAC;IACN,CAAC;IAED,uEAAqC,GAArC,UAAsC,EAAE;QAAxC,iBAMC;QALC,IAAI,CAAC,qBAAqB,CAAC,qCAAqC,CAAC,EAAE,CAAC;aACjE,SAAS,CACR,wBAAc;YACZ,YAAI,CAAC,kCAAkC,GAAG,cAAc;QAAxD,CAAwD,CAC3D,CAAC;IACN,CAAC;IAED,sEAAoC,GAApC,UAAqC,EAAE;QAAvC,iBAMC;QALC,IAAI,CAAC,qBAAqB,CAAC,oCAAoC,CAAC,EAAE,CAAC;aAChE,SAAS,CACR,wBAAc;YACZ,YAAI,CAAC,iCAAiC,GAAG,cAAc;QAAvD,CAAuD,CAC1D,CAAC;IACN,CAAC;IAED,0EAAwC,GAAxC,UAAyC,EAAE;QAA3C,iBAMC;QALC,IAAI,CAAC,qBAAqB,CAAC,wCAAwC,CAAC,EAAE,CAAC;aACpE,SAAS,CACR,wBAAc;YACZ,YAAI,CAAC,qCAAqC,GAAG,cAAc;QAA3D,CAA2D,CAC9D,CAAC;IACN,CAAC;IAED,sEAAoC,GAApC,UAAqC,EAAE;QAAvC,iBAMC;QALC,IAAI,CAAC,qBAAqB,CAAC,oCAAoC,CAAC,EAAE,CAAC;aAChE,SAAS,CACR,wBAAc;YACZ,YAAI,CAAC,iCAAiC,GAAG,cAAc;QAAvD,CAAuD,CAC1D,CAAC;IACN,CAAC;IAED,uDAAqB,GAArB,UAAsB,EAAE;QAAxB,iBAKC;QAJC,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,EAAE,CAAC;aACjD,SAAS,CACR,wBAAc,IAAI,YAAI,CAAC,kBAAkB,GAAG,cAAc,EAAxC,CAAwC,CAC3D,CAAC;IACN,CAAC;IAED,yDAAuB,GAAvB,UAAwB,EAAE;QAA1B,iBAKC;QAJC,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,EAAE,CAAC;aACnD,SAAS,CACR,wBAAc,IAAI,YAAI,CAAC,oBAAoB,GAAG,cAAc,EAA1C,CAA0C,CAC7D,CAAC;IACN,CAAC;IAED,wDAAsB,GAAtB,UAAuB,EAAE;QAAzB,iBAKC;QAJC,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,EAAE,CAAC;aAClD,SAAS,CACR,wBAAc,IAAI,YAAI,CAAC,mBAAmB,GAAG,cAAc,EAAzC,CAAyC,CAC5D,CAAC;IACN,CAAC;IAED,0DAAwB,GAAxB,UAAyB,EAAE;QAA3B,iBAKC;QAJC,IAAI,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,EAAE,CAAC;aACpD,SAAS,CACR,wBAAc,IAAI,YAAI,CAAC,qBAAqB,GAAG,cAAc,EAA3C,CAA2C,CAC9D,CAAC;IACN,CAAC;IAED,uDAAqB,GAArB,UAAsB,EAAE;QAAxB,iBAKC;QAJC,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,EAAE,CAAC;aACjD,SAAS,CACR,wBAAc,IAAI,YAAI,CAAC,kBAAkB,GAAG,cAAc,EAAxC,CAAwC,CAC3D,CAAC;IACN,CAAC;IAED,2DAAyB,GAAzB,UAA0B,EAAE;QAA5B,iBAKC;QAJC,IAAI,CAAC,qBAAqB,CAAC,yBAAyB,CAAC,EAAE,CAAC;aACrD,SAAS,CACR,wBAAc,IAAI,YAAI,CAAC,sBAAsB,GAAG,cAAc,EAA5C,CAA4C,CAC/D,CAAC;IACN,CAAC;IAED,sDAAoB,GAApB,UAAqB,EAAE;QAAvB,iBAKC;QAJC,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,EAAE,CAAC;aAChD,SAAS,CACR,wBAAc,IAAI,YAAI,CAAC,iBAAiB,GAAG,cAAc,EAAvC,CAAuC,CAC1D,CAAC;IACN,CAAC;IAED,4DAA0B,GAA1B,UAA2B,EAAE;QAA7B,iBAKC;QAJC,IAAI,CAAC,qBAAqB,CAAC,0BAA0B,CAAC,EAAE,CAAC;aACtD,SAAS,CACR,wBAAc,IAAI,YAAI,CAAC,uBAAuB,GAAG,cAAc,EAA7C,CAA6C,CAChE,CAAC;IACN,CAAC;IAED,sDAAoB,GAApB,UAAqB,EAAE;QAAvB,iBAKC;QAJC,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,EAAE,CAAC;aAChD,SAAS,CACR,wBAAc,IAAI,YAAI,CAAC,iBAAiB,GAAG,cAAc,EAAvC,CAAuC,CAC1D,CAAC;IACN,CAAC;IAED,gEAA8B,GAA9B,UAA+B,EAAE;QAAjC,iBAKC;QAJC,IAAI,CAAC,qBAAqB,CAAC,8BAA8B,CAAC,EAAE,CAAC;aAC1D,SAAS,CACR,wBAAc,IAAI,YAAI,CAAC,2BAA2B,GAAG,cAAc,EAAjD,CAAiD,CACpE,CAAC;IACN,CAAC;IAED,wCAAM,GAAN;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,6CAAW,GAAX,UAAY,EAAE;QACZ,OAAO,CAAC,GAAG,CAAC,sBAAoB,EAAI,CAAC,CAAC;QACtC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC;IAC9C,CAAC;IAtOU,uBAAuB;QANnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,iIAA+C;;SAEhD,CAAC;+EA6B2B,8DAAc;YACR,8EAAqB;YAClC,wDAAQ;OA7BjB,uBAAuB,CAwOnC;IAAD,8BAAC;CAAA;AAxOmC;;;;;;;;;;;;;;;;;;;ACfO;AACO;AAOlD;IAEE,+BACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAGlB,qBAAgB,GAAG,kCAAkC,CAAC;IAF1D,CAAC;IAIL,oDAAoB,GAApB,UAAqB,EAAU;QAC7B,OAAO,CAAC,GAAG,CAAC,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAI,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAI,CAAC;IACzE,CAAC;IAED,yDAAyB,GAAzB,UAA0B,EAAU;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,cAAW,CACzC;IACH,CAAC;IAED,yDAAyB,GAAzB,UAA0B,EAAU;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,cAAW,CACzC;IACH,CAAC;IAED,mEAAmC,GAAnC,UAAoC,EAAU;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,0BAAuB,CACrD;IACH,CAAC;IAED,gEAAgC,GAAhC,UAAiC,EAAU;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,sBAAmB,CACjD;IACH,CAAC;IAED,+DAA+B,GAA/B,UAAgC,EAAU;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,qBAAkB,CAChD;IACH,CAAC;IAED,sDAAsB,GAAtB,UAAuB,EAAU;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,WAAQ,CACtC;IACH,CAAC;IAED,qEAAqC,GAArC,UAAsC,EAAU;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,2BAAwB,CACtD;IACH,CAAC;IAED,oEAAoC,GAApC,UAAqC,EAAU;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,0BAAuB,CACrD;IACH,CAAC;IAED,wEAAwC,GAAxC,UAAyC,EAAU;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,+BAA4B,CAC1D;IACH,CAAC;IAED,oEAAoC,GAApC,UAAqC,EAAU;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,2BAAwB,CACtD;IACH,CAAC;IAED,qDAAqB,GAArB,UAAsB,EAAU;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,UAAO,CACrC;IACH,CAAC;IAED,qDAAqB,GAArB,UAAsB,EAAU;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,WAAQ,CACtC;IACH,CAAC;IAED,uDAAuB,GAAvB,UAAwB,EAAU;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,aAAU,CACxC;IACH,CAAC;IAED,sDAAsB,GAAtB,UAAuB,EAAU;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,YAAS,CACvC;IACH,CAAC;IAED,wDAAwB,GAAxB,UAAyB,EAAU;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,cAAW,CACzC;IACH,CAAC;IAED,qDAAqB,GAArB,UAAsB,EAAU;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,UAAO,CACrC;IACH,CAAC;IAED,yDAAyB,GAAzB,UAA0B,EAAU;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,eAAY,CAC1C;IACH,CAAC;IAED,oDAAoB,GAApB,UAAqB,EAAU;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,SAAM,CACpC;IACH,CAAC;IAED,0DAA0B,GAA1B,UAA2B,EAAU;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,gBAAa,CAC3C;IACH,CAAC;IAED,oDAAoB,GAApB,UAAqB,EAAU;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,SAAM,CACpC;IACH,CAAC;IAED,8DAA8B,GAA9B,UAA+B,EAAU;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,KAAG,IAAI,CAAC,gBAAgB,GAAG,EAAE,oBAAiB,CAC/C;IACH,CAAC;IAzIU,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAIgB,+DAAU;OAHf,qBAAqB,CA0IjC;IAAD,4BAAC;CAAA;AA1IiC;;;;;;;;;;;;ACRlC,0FAA0F,mCAAmC,iBAAiB,GAAG,6BAA6B,mBAAmB,uBAAuB,GAAG,wCAAwC,8BAA8B,GAAG,qCAAqC,qCAAqC,GAAG,8BAA8B,sBAAsB,qBAAqB,qBAAqB,uBAAuB,GAAG,qBAAqB,yBAAyB,uBAAuB,sBAAsB,sBAAsB,qBAAqB,sBAAsB,qBAAqB,2BAA2B,+BAA+B,mBAAmB,+CAA+C,umD;;;;;;;;;;;ACAtxB,mDAAmD,oCAAoC,qgBAAqgB,gBAAgB,iEAAiE,oBAAoB,4GAA4G,iBAAiB,0OAA0O,kBAAkB,2LAA2L,gBAAgB,iEAAiE,2BAA2B,uJAAuJ,oBAAoB,6V;;;;;;;;;;;;;;;;;;;ACA19C;AAEM;AAExD,IAAM,EAAE,GAAS,MAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAEe;AASpE;IAiNE,8BAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QA9E1D,kBAAkB;QAClB,oBAAe,GAAG,IAAI,wDAAS,CAAC;YAC9B,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACjC,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACxC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACjC,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACxC,8BAA8B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnD,oBAAoB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzC,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAClC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACjC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnC,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACpC,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC/B,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACrC,yBAAyB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC9C,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC/B,kBAAkB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvC,oBAAoB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzC,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACpC,yBAAyB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC9C,gCAAgC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACrD,2BAA2B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChD,iBAAiB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACtC,uBAAuB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC5C,8BAA8B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnD,+BAA+B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACpD,qBAAqB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1C,0BAA0B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC/C,0BAA0B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC/C,8BAA8B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnD,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACxC,iBAAiB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACtC,4BAA4B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACjD,mCAAmC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACxD,mCAAmC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACxD,8BAA8B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnD,yCAAyC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC9D,kDAAkD,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvE,kCAAkC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvD,iCAAiC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACtD,gCAAgC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACrD,oCAAoC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzD,mCAAmC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACxD,kCAAkC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvD,+BAA+B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACpD,8BAA8B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnD,6BAA6B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAClD,iCAAiC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACtD,gCAAgC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACrD,+BAA+B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACpD,mCAAmC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACxD,kCAAkC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvD,iCAAiC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACtD,oCAAoC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzD,mCAAmC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACxD,kCAAkC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvD,wBAAwB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7C,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACrC,sBAAsB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC3C,8BAA8B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnD,sBAAsB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC3C,4BAA4B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACjD,iCAAiC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACtD,wBAAwB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7C,qBAAqB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1C,sBAAsB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC3C,uBAAuB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC5C,kBAAkB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvC,2BAA2B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChD,kCAAkC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvD,+BAA+B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACpD,gCAAgC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACrD,gCAAgC,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACrD,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACjC,CAAC,CAAC;QAGH,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAM,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;QACnC,YAAY,CAAC,WAAW,GAAG,eAAe,CAAC;QAC3C,YAAY,CAAC,eAAe,GAAG,cAAc,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEjC,IAAM,mBAAmB,GAAG,IAAI,OAAO,EAAE,CAAC;QAC1C,mBAAmB,CAAC,WAAW,GAAG,sBAAsB,CAAC;QACzD,mBAAmB,CAAC,eAAe,GAAG,qBAAqB,CAAC;QAC5D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAExC,IAAM,8BAA8B,GAAG,IAAI,OAAO,EAAE,CAAC;QACrD,8BAA8B,CAAC,WAAW;YACxC,mCAAmC,CAAC;QACtC,8BAA8B,CAAC,eAAe;YAC5C,gCAAgC,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;QAEnD,IAAM,oBAAoB,GAAG,IAAI,OAAO,EAAE,CAAC;QAC3C,oBAAoB,CAAC,WAAW,GAAG,kCAAkC,CAAC;QACtE,oBAAoB,CAAC,eAAe,GAAG,sBAAsB,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAEzC,IAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;QAClC,WAAW,CAAC,WAAW,GAAG,2BAA2B,CAAC;QACtD,WAAW,CAAC,eAAe,GAAG,aAAa,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEhC,IAAM,aAAa,GAAG,IAAI,OAAO,EAAE,CAAC;QACpC,aAAa,CAAC,WAAW,GAAG,6BAA6B,CAAC;QAC1D,aAAa,CAAC,eAAe,GAAG,eAAe,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAElC,IAAM,cAAc,GAAG,IAAI,OAAO,EAAE,CAAC;QACrC,cAAc,CAAC,WAAW,GAAG,yBAAyB,CAAC;QACvD,cAAc,CAAC,eAAe,GAAG,gBAAgB,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEnC,IAAM,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;QACnC,YAAY,CAAC,WAAW,GAAG,uBAAuB,CAAC;QACnD,YAAY,CAAC,eAAe,GAAG,cAAc,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEjC,IAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;QAClC,WAAW,CAAC,WAAW,GAAG,2BAA2B,CAAC;QACtD,WAAW,CAAC,eAAe,GAAG,aAAa,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEhC,IAAM,eAAe,GAAG,IAAI,OAAO,EAAE,CAAC;QACtC,eAAe,CAAC,WAAW,GAAG,4BAA4B,CAAC;QAC3D,eAAe,CAAC,eAAe,GAAG,iBAAiB,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEpC,IAAM,UAAU,GAAG,IAAI,OAAO,EAAE,CAAC;QACjC,UAAU,CAAC,WAAW,GAAG,aAAa,CAAC;QACvC,UAAU,CAAC,eAAe,GAAG,YAAY,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE/B,IAAM,gBAAgB,GAAG,IAAI,OAAO,EAAE,CAAC;QACvC,gBAAgB,CAAC,WAAW,GAAG,oBAAoB,CAAC;QACpD,gBAAgB,CAAC,eAAe,GAAG,kBAAkB,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAErC,IAAM,yBAAyB,GAAG,IAAI,OAAO,EAAE,CAAC;QAChD,yBAAyB,CAAC,WAAW,GAAG,8BAA8B,CAAC;QACvE,yBAAyB,CAAC,eAAe,GAAG,2BAA2B,CAAC;QACxE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAE9C,IAAM,UAAU,GAAG,IAAI,OAAO,EAAE,CAAC;QACjC,UAAU,CAAC,WAAW,GAAG,aAAa,CAAC;QACvC,UAAU,CAAC,eAAe,GAAG,YAAY,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE/B,IAAM,kBAAkB,GAAG,IAAI,OAAO,EAAE,CAAC;QACzC,kBAAkB,CAAC,WAAW,GAAG,sBAAsB,CAAC;QACxD,kBAAkB,CAAC,eAAe,GAAG,oBAAoB,CAAC;QAC1D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAEvC,IAAM,oBAAoB,GAAG,IAAI,OAAO,EAAE,CAAC;QAC3C,oBAAoB,CAAC,WAAW,GAAG,wBAAwB,CAAC;QAC5D,oBAAoB,CAAC,eAAe,GAAG,sBAAsB,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAGzC,IAAI,CAAC,sBAAsB,GAAG,uBAAuB,EAAE,CAAC;IAG1D,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,gCAAgC,EAAE,CAAC;QACxC,IAAI,CAAC,wCAAwC,EAAE,CAAC;QAChD,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,qCAAqC,EAAE,CAAC;QAC7C,IAAI,CAAC,6CAA6C,EAAE,CAAC;QACrD,IAAI,CAAC,wCAAwC,EAAE,CAAC;QAChD,IAAI,CAAC,mDAAmD,EAAE,CAAC;QAC3D,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrC,IAAI,CAAC,+BAA+B,EAAE,CAAC;QACvC,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrC,IAAI,CAAC,+BAA+B,EAAE,CAAC;QACvC,IAAI,CAAC,iCAAiC,EAAE,CAAC;QACzC,IAAI,CAAC,kCAAkC,EAAE,CAAC;QAC1C,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACtC,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAED,wDAAyB,GAAzB;QAAA,iBA4BC;QA3BC,iCAAiC;QACjC,IAAI,CAAC,qBAAqB,GAAG,IAAI,aAAa,EAAE,CAAC;QACjD,IAAI,CAAC,qBAAqB,CAAC,YAAY,GAAG,mBAAmB,CAAC;QAC9D,IAAI,CAAC,qBAAqB,CAAC,WAAW,GAAG,EAAE,CAAC;QAG5C,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE;aACzC,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,sBAAsB,GAAG,eAAe,CAAC;YAE9C,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,UAAU,EACV,iBAAiB,EAChB,KAAI,CAAC,sBAAsB,CAC7B,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACtD,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC7D,CAAC;IAED,yDAA0B,GAA1B;QAAA,iBAoEC;QAnEC,iCAAiC;QACjC,IAAI,CAAC,qBAAqB,GAAG,IAAI,aAAa,EAAE,CAAC;QACjD,IAAI,CAAC,qBAAqB,CAAC,YAAY,GAAG,oBAAoB,CAAC;QAC/D,IAAI,CAAC,qBAAqB,CAAC,WAAW,GAAG,EAAE,CAAC;QAG5C,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,EAAE;aAC1C,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,gCAAgC,GAAG,eAAe,CAAC;YAExD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,sBAAsB,EACtB,2BAA2B,EAC3B,KAAI,CAAC,gCAAgC,CACtC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAGtD,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,0BAA0B,EAAE;aACjD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,8BAA8B,GAAG,eAAe,CAAC;YAEtD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,oBAAoB,EACpB,kCAAkC,EAClC,KAAI,CAAC,8BAA8B,CACpC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACtD,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,+BAA+B,EAAE;aACtD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,mCAAmC,GAAG,eAAe,CAAC;YAE3D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,yBAAyB,EACzB,6BAA6B,EAC7B,KAAI,CAAC,mCAAmC,CACzC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEtD,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAE7D,CAAC;IAED,oDAAqB,GAArB;QAAA,iBA+BC;QA9BC,iCAAiC;QACjC,IAAI,CAAC,uBAAuB,GAAG,IAAI,aAAa,EAAE,CAAC;QACnD,IAAI,CAAC,uBAAuB,CAAC,YAAY,GAAG,aAAa,CAAC;QAC1D,IAAI,CAAC,uBAAuB,CAAC,WAAW,GAAG,EAAE,CAAC;QAG9C,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE;aAC3C,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,wBAAwB,GAAG,eAAe,CAAC;YAEhD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,cAAc,EACd,mBAAmB,EACnB,KAAI,CAAC,wBAAwB,CAC9B,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAGxD,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IAE/D,CAAC;IAED,+DAAgC,GAAhC;QAAA,iBAuHC;QAtHC,iCAAiC;QACjC,IAAI,CAAC,4BAA4B,GAAG,IAAI,aAAa,EAAE,CAAC;QACxD,IAAI,CAAC,4BAA4B,CAAC,YAAY,GAAG,kBAAkB,CAAC;QACpE,IAAI,CAAC,4BAA4B,CAAC,WAAW,GAAG,EAAE,CAAC;QAGnD,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,0BAA0B,EAAE;aACjD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,8BAA8B,GAAG,eAAe,CAAC;YAEtD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,mBAAmB,EACnB,yBAAyB,EACzB,KAAI,CAAC,8BAA8B,CACpC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,iCAAiC,EAAE;aACxD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,qCAAqC,GAAG,eAAe,CAAC;YAE7D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,2BAA2B,EAC3B,gCAAgC,EAChC,KAAI,CAAC,qCAAqC,CAC3C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,kCAAkC,EAAE;aACzD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,sCAAsC,GAAG,eAAe,CAAC;YAE9D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,6BAA6B,EAC7B,iCAAiC,EACjC,KAAI,CAAC,sCAAsC,CAC5C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE;aAC/C,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,4BAA4B,GAAG,eAAe,CAAC;YAEpD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,kBAAkB,EAClB,uBAAuB,EACvB,KAAI,CAAC,4BAA4B,CAClC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,6BAA6B,EAAE;aACpD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,iCAAiC,GAAG,eAAe,CAAC;YAEzD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,uBAAuB,EACvB,4BAA4B,EAC5B,KAAI,CAAC,iCAAiC,CACvC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,6BAA6B,EAAE;aACpD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,iCAAiC,GAAG,eAAe,CAAC;YAEzD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,sBAAsB,EACtB,4BAA4B,EAC5B,KAAI,CAAC,iCAAiC,CACvC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;IAEpE,CAAC;IAED,uEAAwC,GAAxC;QAAA,iBAgCC;QA/BC,iCAAiC;QACjC,IAAI,CAAC,oCAAoC,GAAG,IAAI,aAAa,EAAE,CAAC;QAChE,IAAI,CAAC,oCAAoC,CAAC,YAAY;YACpD,qCAAqC,CAAC;QACxC,IAAI,CAAC,oCAAoC,CAAC,WAAW,GAAG,EAAE,CAAC;QAG3D,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,EAAE;aAC9C,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,qCAAqC,GAAG,eAAe,CAAC;YAE7D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,qCAAqC,EACrC,gCAAgC,EAChC,KAAI,CAAC,qCAAqC,CAC3C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,oCAAoC,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAGrE,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;IAE5E,CAAC;IAED,qDAAsB,GAAtB;QAAA,iBAmDC;QAlDC,iCAAiC;QACjC,IAAI,CAAC,iBAAiB,GAAG,IAAI,aAAa,EAAE,CAAC;QAC7C,IAAI,CAAC,iBAAiB,CAAC,YAAY,GAAE,gBAAgB,CAAC;QACtD,IAAI,CAAC,iBAAiB,CAAC,WAAW,GAAG,EAAE,CAAC;QAGxC,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE;aACtC,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,kBAAkB,GAAG,eAAe,CAAC;YAE1C,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,sBAAsB,EACtB,qBAAqB,EACrB,KAAI,CAAC,kBAAkB,CACxB,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAGlD,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE;aAC3C,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,wBAAwB,GAAG,eAAe,CAAC;YAEhD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,aAAa,EACb,mBAAmB,EACnB,KAAI,CAAC,wBAAwB,CAC9B,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAGlD,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAEzD,CAAC;IAED,oEAAqC,GAArC;QAAA,iBAgDC;QA/CC,iCAAiC;QACjC,IAAI,CAAC,iCAAiC,GAAG,IAAI,aAAa,EAAE,CAAC;QAC7D,IAAI,CAAC,iCAAiC,CAAC,YAAY;YACjD,uBAAuB,CAAC;QAC1B,IAAI,CAAC,iCAAiC,CAAC,WAAW,GAAG,EAAE,CAAC;QAGxD,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,+BAA+B,EAAE;aACtD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,mCAAmC,GAAG,eAAe,CAAC;YAE3D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,wBAAwB,EACxB,8BAA8B,EAC9B,KAAI,CAAC,mCAAmC,CACzC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,iCAAiC,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClE,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,sCAAsC,EAAE;aAC7D,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,0CAA0C,GAAG,eAAe,CAAC;YAElE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,gCAAgC,EAChC,qCAAqC,EACrC,KAAI,CAAC,0CAA0C,CAChD,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,iCAAiC,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClE,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;IAEzE,CAAC;IAED,4EAA6C,GAA7C;QAAA,iBAkCC;QAjCC,iCAAiC;QACjC,IAAI,CAAC,yCAAyC,GAAG,IAAI,aAAa,EAAE,CAAC;QACrE,IAAI,CAAC,yCAAyC,CAAC,YAAY;YACzD,0CAA0C,CAAC;QAC7C,IAAI,CAAC,yCAAyC,CAAC,WAAW,GAAG,EAAE,CAAC;QAGhE,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,4BAA4B,EAAE;aACnD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,0CAA0C,GAAG,eAAe,CAAC;YAElE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,0CAA0C,EAC1C,qCAAqC,EACrC,KAAI,CAAC,0CAA0C,CAChD,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,yCAAyC,CAAC,WAAW,CAAC,IAAI,CAC7D,MAAM,CACP,CAAC;QAGJ,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;IAEjF,CAAC;IAED,uEAAwC,GAAxC;QAAA,iBA+BC;QA9BC,iCAAiC;QACjC,IAAI,CAAC,oCAAoC,GAAG,IAAI,aAAa,EAAE,CAAC;QAChE,IAAI,CAAC,oCAAoC,CAAC,YAAY;YACpD,2BAA2B,CAAC;QAC9B,IAAI,CAAC,oCAAoC,CAAC,WAAW,GAAG,EAAE,CAAC;QAG3D,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,iCAAiC,EAAE;aACxD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,qCAAqC,GAAG,eAAe,CAAC;YAE7D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,2BAA2B,EAC3B,gCAAgC,EAChC,KAAI,CAAC,qCAAqC,CAC3C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,oCAAoC,CAAC,WAAW,CAAC,IAAI,CACxD,MAAM,CACP,CAAC;QACJ,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;IAC5E,CAAC;IAED,kFAAmD,GAAnD;QAAA,iBAoDC;QAnDC,iCAAiC;QACjC,IAAI,CAAC,+CAA+C,GAAG,IAAI,aAAa,EAAE,CAAC;QAC3E,IAAI,CAAC,+CAA+C,CAAC,YAAY;YAC/D,uCAAuC,CAAC;QAC1C,IAAI,CAAC,+CAA+C,CAAC,WAAW,GAAG,EAAE,CAAC;QAEtE,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,mCAAmC,EAAE;aAC1D,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,gDAAgD;gBACnD,eAAe,CAAC;YAElB,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,uCAAuC,EACvC,2CAA2C,EAC3C,KAAI,CAAC,gDAAgD,CACtD,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,+CAA+C,CAAC,WAAW;iBAC7D,IAAI,CAAC,MAAM,CAAC,CAAC;QAClB,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,wCAAwC,EAAE;aAC/D,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,yDAAyD;gBAC5D,eAAe,CAAC;YAElB,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,kDAAkD,EAClD,oDAAoD,EACpD,KAAI,CAAC,yDAAyD,CAC/D,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,+CAA+C,CAAC,WAAW;iBAC7D,IAAI,CAAC,MAAM,CAAC,CAAC;QAClB,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAC5B,IAAI,CAAC,+CAA+C,CACrD,CAAC;IACJ,CAAC;IAED,4DAA6B,GAA7B;QAAA,iBAoEC;QAnEC,iCAAiC;QACjC,IAAI,CAAC,4BAA4B,GAAG,IAAI,aAAa,EAAE,CAAC;QACxD,IAAI,CAAC,4BAA4B,CAAC,YAAY,GAAG,4BAA4B,CAAC;QAC9E,IAAI,CAAC,4BAA4B,CAAC,WAAW,GAAG,EAAE,CAAC;QAGnD,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,EAAE;aAChD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,yCAAyC,GAAG,eAAe,CAAC;YAEjE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,iCAAiC,EACjC,oCAAoC,EACpC,KAAI,CAAC,yCAAyC,CAC/C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAG7D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,gCAAgC,EAAE;aACvD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,uCAAuC,GAAG,eAAe,CAAC;YAE/D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,+BAA+B,EAC/B,kCAAkC,EAClC,KAAI,CAAC,uCAAuC,CAC7C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,iCAAiC,EAAE;aACxD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,wCAAwC,GAAG,eAAe,CAAC;YAEhE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,+BAA+B,EAC/B,mCAAmC,EACnC,KAAI,CAAC,wCAAwC,CAC9C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE7D,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;IAEpE,CAAC;IAED,8DAA+B,GAA/B;QAAA,iBAoEC;QAnEC,iCAAiC;QACjC,IAAI,CAAC,8BAA8B,GAAG,IAAI,aAAa,EAAE,CAAC;QAC1D,IAAI,CAAC,8BAA8B,CAAC,YAAY,GAAG,8BAA8B,CAAC;QAClF,IAAI,CAAC,8BAA8B,CAAC,WAAW,GAAG,EAAE,CAAC;QAGrD,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,EAAE;aAClD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,2CAA2C,GAAG,eAAe,CAAC;YAEnE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,mCAAmC,EACnC,sCAAsC,EACtC,KAAI,CAAC,2CAA2C,CACjD,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,8BAA8B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAG/D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,kCAAkC,EAAE;aACzD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,yCAAyC,GAAG,eAAe,CAAC;YAEjE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,iCAAiC,EACjC,oCAAoC,EACpC,KAAI,CAAC,yCAAyC,CAC/C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,8BAA8B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,mCAAmC,EAAE;aAC1D,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,0CAA0C,GAAG,eAAe,CAAC;YAElE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,iCAAiC,EACjC,qCAAqC,EACrC,KAAI,CAAC,0CAA0C,CAChD,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,8BAA8B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE/D,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;IAEtE,CAAC;IAED,4DAA6B,GAA7B;QAAA,iBAoEC;QAnEC,iCAAiC;QACjC,IAAI,CAAC,yBAAyB,GAAG,IAAI,aAAa,EAAE,CAAC;QACrD,IAAI,CAAC,yBAAyB,CAAC,YAAY,GAAG,wBAAwB,CAAC;QACvE,IAAI,CAAC,yBAAyB,CAAC,WAAW,GAAG,EAAE,CAAC;QAGhD,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,EAAE;aAChD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,sCAAsC,GAAG,eAAe,CAAC;YAE9D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,6BAA6B,EAC7B,iCAAiC,EACjC,KAAI,CAAC,sCAAsC,CAC5C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,yBAAyB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAG1D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,gCAAgC,EAAE;aACvD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,oCAAoC,GAAG,eAAe,CAAC;YAE5D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,2BAA2B,EAC3B,+BAA+B,EAC/B,KAAI,CAAC,oCAAoC,CAC1C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,yBAAyB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,iCAAiC,EAAE;aACxD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,qCAAqC,GAAG,eAAe,CAAC;YAE7D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,2BAA2B,EAC3B,gCAAgC,EAChC,KAAI,CAAC,qCAAqC,CAC3C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,yBAAyB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE1D,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;IAEjE,CAAC;IAED,8DAA+B,GAA/B;QAAA,iBAoEC;QAnEC,iCAAiC;QACjC,IAAI,CAAC,2BAA2B,GAAG,IAAI,aAAa,EAAE,CAAC;QACvD,IAAI,CAAC,2BAA2B,CAAC,YAAY,GAAG,0BAA0B,CAAC;QAC3E,IAAI,CAAC,2BAA2B,CAAC,WAAW,GAAG,EAAE,CAAC;QAGlD,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,EAAE;aAClD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,wCAAwC,GAAG,eAAe,CAAC;YAEhE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,+BAA+B,EAC/B,mCAAmC,EACnC,KAAI,CAAC,wCAAwC,CAC9C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAG5D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,kCAAkC,EAAE;aACzD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,sCAAsC,GAAG,eAAe,CAAC;YAE9D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,6BAA6B,EAC7B,iCAAiC,EACjC,KAAI,CAAC,sCAAsC,CAC5C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,mCAAmC,EAAE;aAC1D,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,uCAAuC,GAAG,eAAe,CAAC;YAE/D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,6BAA6B,EAC7B,kCAAkC,EAClC,KAAI,CAAC,uCAAuC,CAC7C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE5D,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;IAEnE,CAAC;IAED,gEAAiC,GAAjC;QAAA,iBAqEC;QApEC,iCAAiC;QACjC,IAAI,CAAC,6BAA6B,GAAG,IAAI,aAAa,EAAE,CAAC;QACzD,IAAI,CAAC,6BAA6B,CAAC,YAAY,GAAG,EAAE;YAClD,4BAA4B,CAAC;QAC/B,IAAI,CAAC,6BAA6B,CAAC,WAAW,GAAG,EAAE,CAAC;QAGpD,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,6BAA6B,EAAE;aACpD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,0CAA0C,GAAG,eAAe,CAAC;YAElE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,iCAAiC,EACjC,qCAAqC,EACrC,KAAI,CAAC,0CAA0C,CAChD,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,6BAA6B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAG9D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,oCAAoC,EAAE;aAC3D,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,wCAAwC,GAAG,eAAe,CAAC;YAEhE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,+BAA+B,EAC/B,mCAAmC,EACnC,KAAI,CAAC,wCAAwC,CAC9C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,6BAA6B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,qCAAqC,EAAE;aAC5D,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,yCAAyC,GAAG,eAAe,CAAC;YAEjE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,+BAA+B,EAC/B,oCAAoC,EACpC,KAAI,CAAC,yCAAyC,CAC/C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,6BAA6B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE9D,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;IAErE,CAAC;IAED,iEAAkC,GAAlC;QAAA,iBAqEC;QApEC,iCAAiC;QACjC,IAAI,CAAC,8BAA8B,GAAG,IAAI,aAAa,EAAE,CAAC;QAC1D,IAAI,CAAC,8BAA8B,CAAC,YAAY;YAC9C,6BAA6B,CAAC;QAChC,IAAI,CAAC,8BAA8B,CAAC,WAAW,GAAG,EAAE,CAAC;QAGrD,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,8BAA8B,EAAE;aACrD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,2CAA2C,GAAG,eAAe,CAAC;YAEnE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,kCAAkC,EAClC,sCAAsC,EACtC,KAAI,CAAC,2CAA2C,CACjD,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,8BAA8B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAG/D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,qCAAqC,EAAE;aAC5D,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,yCAAyC,GAAG,eAAe,CAAC;YAEjE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,gCAAgC,EAChC,oCAAoC,EACpC,KAAI,CAAC,yCAAyC,CAC/C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,8BAA8B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,sCAAsC,EAAE;aAC7D,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,0CAA0C,GAAG,eAAe,CAAC;YAElE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,gCAAgC,EAChC,qCAAqC,EACrC,KAAI,CAAC,0CAA0C,CAChD,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,8BAA8B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE/D,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;IAEtE,CAAC;IAED,mDAAoB,GAApB;QAAA,iBAqEC;QApEC,iCAAiC;QACjC,IAAI,CAAC,gBAAgB,GAAG,IAAI,aAAa,EAAE,CAAC;QAC5C,IAAI,CAAC,gBAAgB,CAAC,YAAY;YAChC,cAAc,CAAC;QACjB,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,EAAE,CAAC;QAGvC,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE;aACzC,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,+BAA+B,GAAG,eAAe,CAAC;YAEvD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,WAAW,EACX,0BAA0B,EAC1B,KAAI,CAAC,+BAA+B,CACrC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAGjD,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,EAAE;aAChD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,6BAA6B,GAAG,eAAe,CAAC;YAErD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,mBAAmB,EACnB,wBAAwB,EACxB,KAAI,CAAC,6BAA6B,CACnC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjD,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE;aAC/C,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,uBAAuB,GAAG,eAAe,CAAC;YAE/C,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,YAAY,EACZ,kBAAkB,EAClB,KAAI,CAAC,uBAAuB,CAC7B,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEjD,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAExD,CAAC;IAED,yDAA0B,GAA1B;QAAA,iBAuFC;QAtFC,iCAAiC;QACjC,IAAI,CAAC,sBAAsB,GAAG,IAAI,aAAa,EAAE,CAAC;QAClD,IAAI,CAAC,sBAAsB,CAAC,YAAY;YACtC,oBAAoB,CAAC;QACvB,IAAI,CAAC,sBAAsB,CAAC,WAAW,GAAG,EAAE,CAAC;QAG7C,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE;aAC/C,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,qCAAqC,GAAG,eAAe,CAAC;YAE7D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,kBAAkB,EAClB,gCAAgC,EAChC,KAAI,CAAC,qCAAqC,CAC3C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAGvD,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,+BAA+B,EAAE;aACtD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,mCAAmC,GAAG,eAAe,CAAC;YAE3D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,0BAA0B,EAC1B,8BAA8B,EAC9B,KAAI,CAAC,mCAAmC,CACzC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvD,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,oCAAoC,EAAE;aAC3D,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,wCAAwC,GAAG,eAAe,CAAC;YAEhE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,+BAA+B,EAC/B,mCAAmC,EACnC,KAAI,CAAC,wCAAwC,CAC9C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvD,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,8BAA8B,EAAE;aACrD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,6BAA6B,GAAG,eAAe,CAAC;YAErD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,mBAAmB,EACnB,wBAAwB,EACxB,KAAI,CAAC,6BAA6B,CACnC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEvD,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAE9D,CAAC;IAED,mDAAoB,GAApB;QAAA,iBA8HC;QA7HC,iCAAiC;QACjC,IAAI,CAAC,gBAAgB,GAAG,IAAI,aAAa,EAAE,CAAC;QAC5C,IAAI,CAAC,gBAAgB,CAAC,YAAY;YAChC,cAAc,CAAC;QACjB,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,EAAE,CAAC;QAGvC,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE;aACzC,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,+BAA+B,GAAG,eAAe,CAAC;YAEvD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,WAAW,EACX,0BAA0B,EAC1B,KAAI,CAAC,+BAA+B,CACrC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAGjD,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,EAAE;aAChD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,6BAA6B,GAAG,eAAe,CAAC;YAErD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,mBAAmB,EACnB,wBAAwB,EACxB,KAAI,CAAC,6BAA6B,CACnC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjD,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE;aAC/C,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,4BAA4B,GAAG,eAAe,CAAC;YAEpD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,iBAAiB,EACjB,uBAAuB,EACvB,KAAI,CAAC,4BAA4B,CAClC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEjD,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE;aAC5C,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,yBAAyB,GAAG,eAAe,CAAC;YAEjD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,cAAc,EACd,oBAAoB,EACpB,KAAI,CAAC,yBAAyB,CAC/B,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEjD,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,0BAA0B,EAAE;aACjD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,8BAA8B,GAAG,eAAe,CAAC;YAEtD,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,oBAAoB,EACpB,yBAAyB,EACzB,KAAI,CAAC,8BAA8B,CACpC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEjD,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,EAAE;aAClD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,kCAAkC,GAAG,eAAe,CAAC;YAE1D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,qBAAqB,EACrB,6BAA6B,EAC7B,KAAI,CAAC,kCAAkC,CACxC,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEjD,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAExD,CAAC;IAED,6DAA8B,GAA9B;QAAA,iBAwFC;QAvFC,iCAAiC;QACjC,IAAI,CAAC,0BAA0B,GAAG,IAAI,aAAa,EAAE,CAAC;QACtD,IAAI,CAAC,0BAA0B,CAAC,YAAY;YAC1C,yBAAyB,CAAC;QAC5B,IAAI,CAAC,0BAA0B,CAAC,WAAW,GAAG,EAAE,CAAC;QAGjD,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,4BAA4B,EAAE;aACnD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,yCAAyC,GAAG,eAAe,CAAC;YAEjE,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,sBAAsB,EACtB,oCAAoC,EACpC,KAAI,CAAC,yCAAyC,CAC/C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAG3D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,mCAAmC,EAAE;aAC1D,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,uCAAuC,GAAG,eAAe,CAAC;YAE/D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,8BAA8B,EAC9B,kCAAkC,EAClC,KAAI,CAAC,uCAAuC,CAC7C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,kCAAkC,EAAE;aACzD,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,sCAAsC,GAAG,eAAe,CAAC;YAE9D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,4BAA4B,EAC5B,iCAAiC,EACjC,KAAI,CAAC,sCAAsC,CAC5C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE3D,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,kBAAkB,CAAC,mCAAmC,EAAE;aAC1D,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,uCAAuC,GAAG,eAAe,CAAC;YAE/D,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,8BAA8B,EAC9B,kCAAkC,EAClC,KAAI,CAAC,uCAAuC,CAC7C,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE3D,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;IAElE,CAAC;IAED,sDAAuB,GAAvB;QAAA,iBA4BC;QA3BC,iCAAiC;QACjC,IAAI,CAAC,mBAAmB,GAAG,IAAI,aAAa,EAAE,CAAC;QAC/C,IAAI,CAAC,mBAAmB,CAAC,YAAY,GAAG,iBAAiB,CAAC;QAC1D,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,EAAE,CAAC;QAG1C,mBAAmB;QACnB,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,EAAE;aACvC,SAAS,CACR,yBAAe;YACb,mCAAmC;YACnC,KAAI,CAAC,oBAAoB,GAAG,eAAe,CAAC;YAE5C,iBAAiB;YACjB,IAAM,MAAM,GAAG,SAAS,CACtB,QAAQ,EACR,eAAe,EACd,KAAI,CAAC,oBAAoB,CAC3B,CAAC;YAEF,2BAA2B;YAC3B,KAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpD,CAAC,CACF,CAAC;QAEJ,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC3D,CAAC;IAED,8CAAe,GAAf;QACE,IAAM,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;QACpD,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,6BAA2B,MAAM,CAAC,SAAW,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC9D,CAAC;IA1oDU,oBAAoB;QAPhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wHAA4C;;SAE7C,CAAC;+EAoNwC,wEAAkB;OAjN/C,oBAAoB,CA4oDhC;IAAD,2BAAC;CAAA;AA5oDgC;AA+oDjC;IAAA;IAGA,CAAC;IAAD,cAAC;AAAD,CAAC;AAED;IAAA;IAGA,CAAC;IAAD,oBAAC;AAAD,CAAC;AAED;IAAA;IAIA,CAAC;IAAD,iBAAC;AAAD,CAAC;AAED,SAAS,uBAAuB;IAC5B,OAAO,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC;AAC1B,CAAC;AAEH,SAAS,SAAS,CAAC,OAAe,EACtB,kBAA0B,EAC1B,cAAyB;IAC/B,IAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;IACpC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;IAC7B,UAAU,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;IACnD,UAAU,CAAC,cAAc,GAAG,cAAc,CAAC;IAE3C,OAAO,UAAU;AACrB,CAAC;;;;;;;;;;;;;;;;;;;;AC3rDwC;AAEO;AAOlD;IAEE,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAG5B,4BAAuB,GAAG,yCAAyC,CAAC;IAFxE,CAAC;IAIL,+CAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,cAAW,CAC3C;IACH,CAAC;IAED,gDAAmB,GAAnB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,gBAAa,CAC7C;IACH,CAAC;IAED,uDAA0B,GAA1B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,wBAAqB,CACrD;IACH,CAAC;IAED,4DAA+B,GAA/B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,mBAAgB,CAChD;IACH,CAAC;IAED,iDAAoB,GAApB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,iBAAc,CAC9C;IACH,CAAC;IAED,uDAA0B,GAA1B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,uBAAoB,CACpD;IACH,CAAC;IAED,8DAAiC,GAAjC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,+BAA4B,CAC5D;IACH,CAAC;IAED,+DAAkC,GAAlC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,iCAA8B,CAC9D;IACH,CAAC;IAED,qDAAwB,GAAxB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,sBAAmB,CACnD;IACH,CAAC;IAED,0DAA6B,GAA7B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,2BAAwB,CACxD;IACH,CAAC;IAED,0DAA6B,GAA7B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,0BAAuB,CACvD;IACH,CAAC;IAED,oDAAuB,GAAvB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,oBAAiB,CACjD;IACH,CAAC;IAED,4CAAe,GAAf;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,WAAQ,CACxC;IACH,CAAC;IAED,iDAAoB,GAApB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,iBAAc,CAC9C;IACH,CAAC;IAED,4DAA+B,GAA/B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,4BAAyB,CACzD;IACH,CAAC;IAED,mEAAsC,GAAtC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,oCAAiC,CACjE;IACH,CAAC;IAED,yDAA4B,GAA5B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,yBAAsB,CACtD;IACH,CAAC;IAED,8DAAiC,GAAjC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,+BAA4B,CAC5D;IACH,CAAC;IAED,gEAAmC,GAAnC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,iCAA8B,CAC9D;IACH,CAAC;IAED,qEAAwC,GAAxC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,uCAAoC,CACpE;IACH,CAAC;IAED,sDAAyB,GAAzB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,wBAAqB,CACrD;IACH,CAAC;IAED,6DAAgC,GAAhC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,gCAA6B,CAC7D;IACH,CAAC;IAED,8DAAiC,GAAjC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,wBAAqB,CACrD;IACH,CAAC;IAED,wDAA2B,GAA3B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,0BAAuB,CACvD;IACH,CAAC;IAED,+DAAkC,GAAlC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,kCAA+B,CAC/D;IACH,CAAC;IAED,gEAAmC,GAAnC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,0BAAuB,CACvD;IACH,CAAC;IAED,sDAAyB,GAAzB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,uBAAoB,CACpD;IACH,CAAC;IAED,6DAAgC,GAAhC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,+BAA4B,CAC5D;IACH,CAAC;IAED,8DAAiC,GAAjC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,uBAAoB,CACpD;IACH,CAAC;IAED,wDAA2B,GAA3B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,yBAAsB,CACtD;IACH,CAAC;IAED,+DAAkC,GAAlC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,iCAA8B,CAC9D;IACH,CAAC;IAED,gEAAmC,GAAnC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,yBAAsB,CACtD;IACH,CAAC;IAED,0DAA6B,GAA7B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,cAAW,CAC3C;IACH,CAAC;IAED,iEAAoC,GAApC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,sBAAmB,CACnD;IACH,CAAC;IAED,kEAAqC,GAArC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,cAAW,CAC3C;IACH,CAAC;IAED,2DAA8B,GAA9B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,mBAAgB,CAChD;IACH,CAAC;IAED,kEAAqC,GAArC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,2BAAwB,CACxD;IACH,CAAC;IAED,mEAAsC,GAAtC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,mBAAgB,CAChD;IACH,CAAC;IAED,+CAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,eAAY,CAC5C;IACH,CAAC;IAED,sDAAyB,GAAzB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,uBAAoB,CACpD;IACH,CAAC;IAED,qDAAwB,GAAxB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,aAAU,CAC1C;IACH,CAAC;IAED,qDAAwB,GAAxB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,sBAAmB,CACnD;IACH,CAAC;IAED,4DAA+B,GAA/B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,8BAA2B,CAC3D;IACH,CAAC;IAED,iEAAoC,GAApC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,mCAAgC,CAChE;IACH,CAAC;IAED,2DAA8B,GAA9B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,oBAAiB,CACjD;IACH,CAAC;IAED,+CAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,eAAY,CAC5C;IACH,CAAC;IAED,sDAAyB,GAAzB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,uBAAoB,CACpD;IACH,CAAC;IAED,qDAAwB,GAAxB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,aAAU,CAC1C;IACH,CAAC;IAED,kDAAqB,GAArB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,kBAAe,CAC/C;IACH,CAAC;IAED,uDAA0B,GAA1B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,wBAAqB,CACrD;IACH,CAAC;IAED,wDAA2B,GAA3B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,yBAAsB,CACtD;IACH,CAAC;IAED,yDAA4B,GAA5B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,0BAAuB,CACvD;IACH,CAAC;IAED,gEAAmC,GAAnC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,kCAA+B,CAC/D;IACH,CAAC;IAED,+DAAkC,GAAlC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,wBAAqB,CACrD;IACH,CAAC;IAED,gEAAmC,GAAnC;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,kCAA+B,CAC/D;IACH,CAAC;IAED,6CAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,uBAAuB,YAAS,CACzC;IACH,CAAC;IArVU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,kBAAkB,CAsV9B;IAAD,yBAAC;CAAA;AAtV8B;AAyV/B;IAAA;IAGA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;ACrWD,4EAA4E,yCAAyC,iBAAiB,GAAG,cAAc,sBAAsB,0BAA0B,eAAe,gBAAgB,GAAG,iBAAiB,oBAAoB,uBAAuB,YAAY,2BAA2B,iBAAiB,oBAAoB,kBAAkB,uBAAuB,GAAG,gCAAgC,yCAAyC,iBAAiB,GAAG,uBAAuB,mBAAmB,2BAA2B,eAAe,GAAG,oBAAoB,uBAAuB,cAAc,GAAG,qBAAqB,0BAA0B,qBAAqB,iBAAiB,iCAAiC,8BAA8B,qBAAqB,uBAAuB,eAAe,cAAc,kBAAkB,uBAAuB,+BAA+B,GAAG,+CAA+C,+iE;;;;;;;;;;;ACAp+B,6XAA6X,eAAe,SAAS,iBAAiB,oK;;;;;;;;;;;;;;;;;;;ACApX;AAEI;AACL;AAQjD;IAME,4BAAoB,gBAAkC,EAClC,KAAqB;QADrB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAAgB;QACvC,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC3C,CAAC;IAED,qCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACzC,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,uCAAuC;IACvC,sCAAsC;IACtC,IAAI;IAEJ,yCAAY,GAAZ;QAAA,iBAIC;QAHC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACpC,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE;aACjC,SAAS,CAAC,mBAAS,IAAI,YAAI,CAAC,SAAS,GAAG,SAAS,EAA1B,CAA0B,CAAC,CAAC;IACxD,CAAC;IAED,4CAAe,GAAf,UAAgB,KAAK;QACnB,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,EAAE;IACrB,CAAC;IA7BU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,+GAAyC;;SAE1C,CAAC;+EAQsC,mEAAgB;YAC3B,8DAAc;OAP9B,kBAAkB,CA+B9B;IAAD,yBAAC;CAAA;AA/B8B;;;;;;;;;;;;;;;;;;;ACXY;AACO;AAUlD;IAEE,0BACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAGlB,iBAAY,GAAG,kCAAkC,CAAC;IAFtD,CAAC;IAIL,uCAAY,GAAZ;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,YAAY,CAAC;IACrD,CAAC;IAXU,gBAAgB;QAJ5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAKgB,+DAAU;OAHf,gBAAgB,CAa5B;IAAD,uBAAC;CAAA;AAb4B;;;;;;;;;;;;ACX7B,+DAA+D,mJ;;;;;;;;;;;ACA/D,2WAA2W,8BAA8B,2VAA2V,gCAAgC,yVAAyV,4BAA4B,S;;;;;;;;;;;;;;;;;ACA/jC;AAC1D,IAAM,QAAQ,GAAS,MAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AASnD;IAqCE,2BAAoB,IAAY;QAAhC,iBA4NC;QA5NmB,SAAI,GAAJ,IAAI,CAAQ;QAC9B,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAE5C,qCAAqC;QACrC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,oBAAoB,EACxC,UAAC,KAAK,EAAE,IAAI;YACV,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;YACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAElB,IAAI,CAAC,GAAG,CAAE;gBAER,sCAAsC;gBACtC,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;oBAC/C,KAAI,CAAC,4BAA4B,GAAG,IAAI;iBACzC;qBACI;oBACH,KAAI,CAAC,4BAA4B;wBAC/B,IAAI,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBACzC;gBAED,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;oBAC9C,KAAI,CAAC,8BAA8B,GAAG,IAAI;iBAC3C;qBACI;oBACH,KAAI,CAAC,8BAA8B;wBACjC,IAAI,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBACxC;gBAED,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;oBAC1C,KAAI,CAAC,0BAA0B,GAAG,IAAI;iBACvC;qBACI;oBACH,KAAI,CAAC,0BAA0B;wBAC7B,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpC;YAEH,CAAC,CAAC;QACJ,CAAC,CACJ,CAAC;QAEF,sEAAsE;QACtE,eAAe;QAEf,uEAAuE;QACvE,qEAAqE;QACrE,uEAAuE;QACvE,6DAA6D;QAC7D,iCAAiC;QAEjC,kDAAkD;QAClD,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,qCAAqC,EAAE,UAAC,KAAK;YACtE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAClC,EAAC,KAAK,EAAE,8BAA8B,EAAE,UAAU,EAAE,CAAC,eAAe,CAAC,EAAC,EACtE,UAAC,UAAU;gBACT,IAAI,UAAU,KAAK,SAAS,EAAC;oBACzB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;oBAClC,OAAO;iBACV;gBACD,6DAA6D;gBAC7D,oDAAoD;qBAC/C;oBACH,8BAA8B;oBAC9B,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;oBAC3D,QAAQ,CAAC,WAAW,CAAC,IAAI,CACvB,0BAA0B,EAC1B,UAAU,CACX,CAAC;oBAEF,8DAA8D;oBAC9D,qCAAqC;oBACrC,KAAI,CAAC,qBAAqB,EAAE,CAAC;oBAC7B,oCAAoC;oBACpC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,oBAAoB,EAC1C,UAAC,KAAK,EAAE,IAAI;wBACV,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;wBACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAElB,gEAAgE;wBAChE,IAAI,CAAC,GAAG,CAAE;4BACR,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;gCAC/C,KAAI,CAAC,4BAA4B,GAAG,IAAI;6BACzC;iCACI;gCACH,KAAI,CAAC,4BAA4B;oCAC/B,IAAI,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;6BACzC;4BACD,OAAO,CAAC,GAAG,CACT,kCAAgC,KAAI,CAAC,4BAA4B,gBAAa,CAC/E,CAAC;4BAEF,2DAA2D;4BAC3D,uDAAuD;4BACvD,qCAAqC;4BACrC,uDAAuD;4BACvD,KAAI,CAAC,cAAc,GAAG,UAAU,CAAC;wBACnC,CAAC,CAAC;oBACJ,CAAC,CACF,CAAC;iBACH;gBACD,OAAO,CAAC,GAAG,CAAC,4BAA0B,KAAI,CAAC,cAAgB,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAED,oDAAoD;QACpD,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,uCAAuC,EAC3D,UAAC,KAAK;YACN,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CACnC,EAAC,KAAK,EAAE,qCAAqC;gBAC7C,UAAU,EAAE,CAAC,UAAU,CAAC,EAAC,EACzB,UAAC,UAAU;gBACT,IAAI,UAAU,KAAK,SAAS,EAAC;oBACzB,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBAChC,OAAO;iBACV;gBACD,6DAA6D;gBAC7D,oDAAoD;qBAC/C;oBACH,8BAA8B;oBAC9B,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;oBAC7D,QAAQ,CAAC,WAAW,CAAC,IAAI,CACvB,4BAA4B,EAC5B,UAAU,CACX,CAAC;oBAEF,8DAA8D;oBAC9D,qCAAqC;oBACrC,KAAI,CAAC,qBAAqB,EAAE,CAAC;oBAC7B,oCAAoC;oBACpC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,oBAAoB,EAC1C,UAAC,KAAK,EAAE,IAAI;wBACV,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;wBACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAElB,kEAAkE;wBAClE,IAAI,CAAC,GAAG,CAAE;4BACR,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;gCAC9C,KAAI,CAAC,8BAA8B,GAAG,IAAI;6BAC3C;iCACI;gCACH,KAAI,CAAC,8BAA8B;oCACjC,IAAI,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;6BACxC;4BACD,OAAO,CAAC,GAAG,CACT,oCAAkC,KAAI,CAAC,8BAA8B,gBAAa,CACnF,CAAC;4BAEF,2DAA2D;4BAC3D,uDAAuD;4BACvD,qCAAqC;4BACrC,uDAAuD;4BACvD,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;wBAC/B,CAAC,CAAC;oBACJ,CAAC,CACF,CAAC;iBACH;gBACD,OAAO,CAAC,GAAG,CAAC,8BAA4B,KAAI,CAAC,UAAU,CAAC,CAAC,CAAG,CAAC,CAAC;YAChE,CAAC,CACF,CAAC;QACJ,CAAC,CACF,CAAC;QAGF,0DAA0D;QAC1D,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,mCAAmC,EACvD,UAAC,KAAK;YACN,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CACnC,EAAC,KAAK,EAAE,iCAAiC;gBACzC,UAAU,EAAE,CAAC,eAAe,CAAC,EAAC,EAC9B,UAAC,gBAAgB;gBACf,IAAI,gBAAgB,KAAK,SAAS,EAAC;oBAC/B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBAChC,OAAO;iBACV;gBACD,6DAA6D;gBAC7D,oDAAoD;qBAC/C;oBACH,8BAA8B;oBAC9B,OAAO,CAAC,GAAG,CAAC,4CAA4C;wBACtD,WAAW,CAAC,CAAC;oBACf,QAAQ,CAAC,WAAW,CAAC,IAAI,CACvB,wBAAwB,EAAE,gBAAgB,CAC3C,CAAC;oBAEF,8DAA8D;oBAC9D,qCAAqC;oBACrC,KAAI,CAAC,qBAAqB,EAAE,CAAC;oBAC7B,oCAAoC;oBACpC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,oBAAoB,EAC1C,UAAC,KAAK,EAAE,IAAI;wBACV,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;wBACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAElB,8DAA8D;wBAC9D,IAAI,CAAC,GAAG,CAAE;4BACR,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;gCAC1C,KAAI,CAAC,0BAA0B,GAAG,IAAI;6BACvC;iCACI;gCACH,KAAI,CAAC,0BAA0B;oCAC7B,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;6BACpC;4BACD,OAAO,CAAC,GAAG,CACT,gDAA8C,KAAI,CAAC,0BAA0B,gBAAa,CAC3F,CAAC;4BAEF,2DAA2D;4BAC3D,uDAAuD;4BACvD,qCAAqC;4BACrC,uDAAuD;4BACvD,KAAI,CAAC,YAAY,GAAG,gBAAgB,CAAC;wBACvC,CAAC,CAAC;oBACJ,CAAC,CACF,CAAC;iBACH;gBACD,OAAO,CAAC,GAAG,CAAC,0BAAwB,KAAI,CAAC,YAAY,CAAC,CAAC,CAAG,CAAC,CAAC;YAC9D,CAAC,CACF,CAAC;QACJ,CAAC,CACF,CAAC;IACJ,CAAC;IAnPD,0CAAc,GAAd,UAAe,KAAK;QAClB,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;QACnD,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;IAC5D,CAAC;IAGD,4CAAgB,GAAhB,UAAiB,KAAK,EAAE,IAAI;QAC1B,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;QACrD,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;IAC9D,CAAC;IAGD,8CAAkB,GAAlB,UAAmB,KAAK,EAAE,IAAI;QAC5B,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;QACvD,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;IAC1D,CAAC;IAwOD,oCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC;IACzC,CAAC;IAED,iDAAqB,GAArB;QACE,OAAO,CAAC,GAAG,CAAC,kDAAkD,CAAC,CAAC;QAChE,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,CAAC;IACpD,CAAC;IA5QU,iBAAiB;QAP7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4GAAwC;;SAEzC,CAAC;+EAwC0B,oDAAM;OArCrB,iBAAiB,CA6Q7B;IAAD,wBAAC;CAAA;AA7Q6B;;;;;;;;;;;;;ACV9B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { ScenariosComponent } from './scenarios/scenarios.component';\nimport { ScenarioDetailComponent }\n  from './scenario-detail/scenario-detail.component';\nimport { ScenarioNewComponent }\n  from './scenario-new/scenario-new.component';\nimport { SettingsComponent } from './settings/settings.component';\n\nconst appRoutes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'scenarios', component: ScenariosComponent },\n  { path: 'scenario/:id', component: ScenarioDetailComponent },\n  { path: 'scenario-new', component: ScenarioNewComponent },\n  { path: 'settings', component: SettingsComponent },\n  { path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true } // <-- debugging purposes only\n    )\n  ],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"/*Navbar styling*/\\nul {\\n  list-style-type: none;\\n  margin: 0;\\n  padding: 0;\\n  overflow: hidden;\\n  background-color: midnightblue;\\n}\\nli {\\n  float: left;\\n}\\nli a {\\n  display: block;\\n  color: white;\\n  text-align: center;\\n  padding: 14px 16px;\\n  text-decoration: none;\\n}\\nli a:hover:not(.active) {\\n  background-color: lightsteelblue;\\n}\\n.active-item {\\n  background-color: slategrey;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FBQ2pCO0VBQ0UscUJBQXFCO0VBQ3JCLFNBQVM7RUFDVCxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLDhCQUE4QjtBQUNoQztBQUVBO0VBQ0UsV0FBVztBQUNiO0FBRUE7RUFDRSxjQUFjO0VBQ2QsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCO0FBRUE7RUFDRSxnQ0FBZ0M7QUFDbEM7QUFFQTtFQUNFLDJCQUEyQjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLypOYXZiYXIgc3R5bGluZyovXG51bCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBtaWRuaWdodGJsdWU7XG59XG5cbmxpIHtcbiAgZmxvYXQ6IGxlZnQ7XG59XG5cbmxpIGEge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDE0cHggMTZweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5saSBhOmhvdmVyOm5vdCguYWN0aXZlKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0c3RlZWxibHVlO1xufVxuXG4uYWN0aXZlLWl0ZW0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBzbGF0ZWdyZXk7XG59XG4iXX0= */\"","module.exports = \"<h1>{{title}}</h1>\\n\\n<nav class=\\\"navbar\\\">\\n    <div class=\\\"container\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"home\\\">Home</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"scenarios\\\">Scenarios</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active-item\\\"\\n                style=\\\"float:right\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"settings\\\">Settings</a>\\n            </li>\\n        </ul>\\n    </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'Welcome to GridPath';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { ScenariosComponent } from './scenarios/scenarios.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { ScenarioDetailComponent } from './scenario-detail/scenario-detail.component';\nimport { ScenarioNewComponent } from './scenario-new/scenario-new.component';\nimport { HomeComponent } from './home/home.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ScenariosComponent,\n    SettingsComponent,\n    ScenarioDetailComponent,\n    ScenarioNewComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div><span>Server Status: </span>{{serverStatus}}</div>\\n<button id=\\\"checkServerStatusClick\\\" class=\\\"button-primary\\\"\\n            (click)=\\\"updateServerStatus()\\\">Update server status</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HomeService} from \"./home.service\";\n\nconst electron = (<any>window).require('electron');\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  serverStatus: string;\n\n  constructor(private homeService: HomeService) {\n  }\n\n  ngOnInit() {\n    this.getServerStatus();\n    console.log(this.serverStatus)\n  }\n\n  getServerStatus(): void {\n    console.log(\"Getting server status...\");\n    this.homeService.getScenarios()\n      .subscribe(\n        status => this.serverStatus = status,\n        error => {\n          console.log('HTTP Error caught', error);\n          this.serverStatus = 'down'\n        }\n      );\n  }\n\n  updateServerStatus(event): void {\n    console.log('Updating server status...');\n    this.getServerStatus();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  constructor(private http: HttpClient) { }\n\n  private statusURL = 'http://127.0.0.1:8080/server-status';\n\n  getScenarios(): Observable<string> {\n    console.log(this.http.get<string>(this.statusURL));\n    return(this.http.get<string>(this.statusURL))\n  }\n}\n","module.exports = \"/* scenarioDetailComponent's private CSS styles */\\n\\n.scenario-detail th {\\n  background-color: midnightblue;\\n  color: white;\\n}\\n\\n.scenario-detail th, td {\\n    padding: 5px;\\n    text-align: left;\\n}\\n\\n.scenario-detail tr:nth-child(odd) {\\n  background-color: #f2f2f2;\\n}\\n\\n.scenario-detail td:first-child {\\n  background-color: lightsteelblue;\\n}\\n\\n.scenario-detail caption {\\n  font-weight: bold;\\n  text-align: left;\\n  margin-top: 10px;\\n  margin-bottom: 1px;\\n}\\n\\n.button-primary {\\n  background:aliceblue;\\n  color:midnightblue;\\n  font-size: medium;\\n  font-weight: bold;\\n  margin-top: 10px;\\n  padding: 5px 10px;\\n  cursor:pointer\\n}\\n\\n.button-primary:hover {\\n  background-color: darkblue;\\n  color: white\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NlbmFyaW8tZGV0YWlsL3NjZW5hcmlvLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlEQUFpRDs7QUFFakQ7RUFDRSw4QkFBOEI7RUFDOUIsWUFBWTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGdCQUFnQjtBQUNwQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLG9CQUFvQjtFQUNwQixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCO0FBQ0Y7O0FBRUE7RUFDRSwwQkFBMEI7RUFDMUI7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3NjZW5hcmlvLWRldGFpbC9zY2VuYXJpby1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHNjZW5hcmlvRGV0YWlsQ29tcG9uZW50J3MgcHJpdmF0ZSBDU1Mgc3R5bGVzICovXG5cbi5zY2VuYXJpby1kZXRhaWwgdGgge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBtaWRuaWdodGJsdWU7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLnNjZW5hcmlvLWRldGFpbCB0aCwgdGQge1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4uc2NlbmFyaW8tZGV0YWlsIHRyOm50aC1jaGlsZChvZGQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcbn1cblxuLnNjZW5hcmlvLWRldGFpbCB0ZDpmaXJzdC1jaGlsZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0c3RlZWxibHVlO1xufVxuXG4uc2NlbmFyaW8tZGV0YWlsIGNhcHRpb24ge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWJvdHRvbTogMXB4O1xufVxuXG4uYnV0dG9uLXByaW1hcnkge1xuICBiYWNrZ3JvdW5kOmFsaWNlYmx1ZTtcbiAgY29sb3I6bWlkbmlnaHRibHVlO1xuICBmb250LXNpemU6IG1lZGl1bTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xuICBjdXJzb3I6cG9pbnRlclxufVxuXG4uYnV0dG9uLXByaW1hcnk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrYmx1ZTtcbiAgY29sb3I6IHdoaXRlXG59XG4iXX0= */\"","module.exports = \"<h2>{{scenarioDetail[1].value}}<span> Scenario Details</span></h2>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Features</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailFeatures\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Temporal settings</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailTemporal\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Load zone settings</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailGeographyLoadZones\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>System Load</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailLoad\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Project capacity settings</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailProjectCapacity\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Project operating characteristics settings</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailProjectOpChars\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Fuels settings</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailFuels\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Transmission capacity settings</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailTransmissionCapacity\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Transmission operating characteristics settings</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailTransmissionOpChars\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Transmission hurdle rates</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailTransmissionHurdleRates\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Transmission simultaneous flow limits</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailTransmissionSimFlow\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Load Following Reserves Up</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailLFUp\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Load Following Reserves Down</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailLFDown\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Regulation Reserves Up</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailRegUp\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Regulation Reserves Down</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailRegDown\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Spinning Reserves</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailSpin\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Frequency Response Reserves</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailFreqResp\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>RPS</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailRPS\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Carbon Cap</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailCarbonCap\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>PRM</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailPRM\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Local Capacity</caption>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n  <ng-container *ngFor=\\\"let sd of scenarioDetailLocalCapacity\\\">\\n     <tr>\\n       <td>{{sd.name}}</td>\\n       <td>{{sd.value}}</td>\\n     </tr>\\n  </ng-container>\\n</table>\\n\\n<button id=\\\"runScenarioButton\\\" class=\\\"button-primary\\\"\\n      (click)=\\\"runScenario(scenarioDetail[0].value)\\\">Run Scenario</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nconst electron = (<any>window).require('electron');\n\nimport { ScenarioDetail } from './scenario-detail'\nimport { ScenarioDetailService } from './scenario-detail.service'\n\n@Component({\n  selector: 'app-scenario-detail',\n  templateUrl: './scenario-detail.component.html',\n  styleUrls: ['./scenario-detail.component.css']\n})\n\nexport class ScenarioDetailComponent implements OnInit {\n\n  scenarioDetail: ScenarioDetail[];\n  scenarioDetailFeatures: ScenarioDetail[];\n  scenarioDetailTemporal: ScenarioDetail[];\n  scenarioDetailGeographyLoadZones: ScenarioDetail[];\n  scenarioDetailLoad: ScenarioDetail[];\n  scenarioDetailProjectCapacity: ScenarioDetail[];\n  scenarioDetailProjectOpChars: ScenarioDetail[];\n  scenarioDetailFuels: ScenarioDetail[];\n  scenarioDetailTransmissionCapacity: ScenarioDetail[];\n  scenarioDetailTransmissionOpChars: ScenarioDetail[];\n  scenarioDetailTransmissionHurdleRates: ScenarioDetail[];\n  scenarioDetailTransmissionSimFlow: ScenarioDetail[];\n  scenarioDetailLFUp: ScenarioDetail[];\n  scenarioDetailLFDown: ScenarioDetail[];\n  scenarioDetailRegUp: ScenarioDetail[];\n  scenarioDetailRegDown: ScenarioDetail[];\n  scenarioDetailSpin: ScenarioDetail[];\n  scenarioDetailFreqResp: ScenarioDetail[];\n  scenarioDetailRPS: ScenarioDetail[];\n  scenarioDetailCarbonCap: ScenarioDetail[];\n  scenarioDetailPRM: ScenarioDetail[];\n  scenarioDetailLocalCapacity: ScenarioDetail[];\n  id: number;\n  private sub: any;\n\n  constructor(private route: ActivatedRoute,\n    private scenarioDetailService: ScenarioDetailService,\n    private location: Location) {\n  }\n\n  ngOnInit(): void {\n    // The ActivatedRoute service provides a params Observable which we can\n    // subscribe to in order to get the route parameters\n    this.sub = this.route.params.subscribe(params => {\n       this.id = +params['id'];\n       console.log(`Scenario ID is ${this.id}`)\n    });\n    this.getScenarioDetailAll(this.id);\n    this.getScenarioDetailFeatures(this.id);\n    this.getScenarioDetailTemporal(this.id);\n    this.getScenarioDetailGeographyLoadZones(this.id);\n    this.getScenarioDetailLoad(this.id);\n    this.getScenarioDetailProjectCapacity(this.id);\n    this.getScenarioDetailProjectOpChars(this.id);\n    this.getScenarioDetailFuels(this.id);\n    this.getScenarioDetailTransmissionCapacity(this.id);\n    this.getScenarioDetailTransmissionOpChars(this.id);\n    this.getScenarioDetailTransmissionHurdleRates(this.id);\n    this.getScenarioDetailTransmissionSimFlow(this.id);\n    this.getScenarioDetailLFup(this.id);\n    this.getScenarioDetailLFDown(this.id);\n    this.getScenarioDetailRegUp(this.id);\n    this.getScenarioDetailRegDown(this.id);\n    this.getScenarioDetailSpin(this.id);\n    this.getScenarioDetailFreqResp(this.id);\n    this.getScenarioDetailRPS(this.id);\n    this.getScenarioDetailCarbonCap(this.id);\n    this.getScenarioDetailPRM(this.id);\n    this.getScenarioDetailLocalCapacity(this.id);\n  }\n\n  getScenarioDetailAll(id): void {\n    this.scenarioDetailService.getScenarioDetailAll(id)\n      .subscribe(scenarioDetail => this.scenarioDetail = scenarioDetail);\n  }\n\n  getScenarioDetailFeatures(id): void {\n    this.scenarioDetailService.getScenarioDetailFeatures(id)\n      .subscribe(\n        scenarioDetail => this.scenarioDetailFeatures = scenarioDetail\n      );\n  }\n\n  getScenarioDetailTemporal(id): void {\n    this.scenarioDetailService.getScenarioDetailTemporal(id)\n      .subscribe(\n        scenarioDetail => this.scenarioDetailTemporal = scenarioDetail\n      );\n  }\n\n  getScenarioDetailGeographyLoadZones(id): void {\n    this.scenarioDetailService.getScenarioDetailGeographyLoadZones(id)\n      .subscribe(\n        scenarioDetail =>\n          this.scenarioDetailGeographyLoadZones = scenarioDetail\n      );\n  }\n\n  getScenarioDetailLoad(id): void {\n    this.scenarioDetailService.getScenarioDetailLoad(id)\n      .subscribe(\n        scenarioDetail => this.scenarioDetailLoad = scenarioDetail\n      );\n  }\n\n  getScenarioDetailProjectCapacity(id): void {\n    this.scenarioDetailService.getScenarioDetailProjectCapacity(id)\n      .subscribe(\n        scenarioDetail =>\n          this.scenarioDetailProjectCapacity = scenarioDetail\n      );\n  }\n\n  getScenarioDetailProjectOpChars(id): void {\n    this.scenarioDetailService.getScenarioDetailProjectOpChars(id)\n      .subscribe(\n        scenarioDetail =>\n          this.scenarioDetailProjectOpChars = scenarioDetail\n      );\n  }\n\n  getScenarioDetailFuels(id): void {\n    this.scenarioDetailService.getScenarioDetailFuels(id)\n      .subscribe(\n        scenarioDetail =>\n          this.scenarioDetailFuels = scenarioDetail\n      );\n  }\n\n  getScenarioDetailTransmissionCapacity(id): void {\n    this.scenarioDetailService.getScenarioDetailTransmissionCapacity(id)\n      .subscribe(\n        scenarioDetail =>\n          this.scenarioDetailTransmissionCapacity = scenarioDetail\n      );\n  }\n\n  getScenarioDetailTransmissionOpChars(id): void {\n    this.scenarioDetailService.getScenarioDetailTransmissionOpChars(id)\n      .subscribe(\n        scenarioDetail =>\n          this.scenarioDetailTransmissionOpChars = scenarioDetail\n      );\n  }\n\n  getScenarioDetailTransmissionHurdleRates(id): void {\n    this.scenarioDetailService.getScenarioDetailTransmissionHurdleRates(id)\n      .subscribe(\n        scenarioDetail =>\n          this.scenarioDetailTransmissionHurdleRates = scenarioDetail\n      );\n  }\n\n  getScenarioDetailTransmissionSimFlow(id): void {\n    this.scenarioDetailService.getScenarioDetailTransmissionSimFlow(id)\n      .subscribe(\n        scenarioDetail =>\n          this.scenarioDetailTransmissionSimFlow = scenarioDetail\n      );\n  }\n\n  getScenarioDetailLFup(id): void {\n    this.scenarioDetailService.getScenarioDetailLFUp(id)\n      .subscribe(\n        scenarioDetail => this.scenarioDetailLFUp = scenarioDetail\n      );\n  }\n\n  getScenarioDetailLFDown(id): void {\n    this.scenarioDetailService.getScenarioDetailLFDown(id)\n      .subscribe(\n        scenarioDetail => this.scenarioDetailLFDown = scenarioDetail\n      );\n  }\n\n  getScenarioDetailRegUp(id): void {\n    this.scenarioDetailService.getScenarioDetailRegUp(id)\n      .subscribe(\n        scenarioDetail => this.scenarioDetailRegUp = scenarioDetail\n      );\n  }\n\n  getScenarioDetailRegDown(id): void {\n    this.scenarioDetailService.getScenarioDetailRegDown(id)\n      .subscribe(\n        scenarioDetail => this.scenarioDetailRegDown = scenarioDetail\n      );\n  }\n\n  getScenarioDetailSpin(id): void {\n    this.scenarioDetailService.getScenarioDetailSpin(id)\n      .subscribe(\n        scenarioDetail => this.scenarioDetailSpin = scenarioDetail\n      );\n  }\n\n  getScenarioDetailFreqResp(id): void {\n    this.scenarioDetailService.getScenarioDetailFreqResp(id)\n      .subscribe(\n        scenarioDetail => this.scenarioDetailFreqResp = scenarioDetail\n      );\n  }\n\n  getScenarioDetailRPS(id): void {\n    this.scenarioDetailService.getScenarioDetailRPS(id)\n      .subscribe(\n        scenarioDetail => this.scenarioDetailRPS = scenarioDetail\n      );\n  }\n\n  getScenarioDetailCarbonCap(id): void {\n    this.scenarioDetailService.getScenarioDetailCarbonCap(id)\n      .subscribe(\n        scenarioDetail => this.scenarioDetailCarbonCap = scenarioDetail\n      );\n  }\n\n  getScenarioDetailPRM(id): void {\n    this.scenarioDetailService.getScenarioDetailPRM(id)\n      .subscribe(\n        scenarioDetail => this.scenarioDetailPRM = scenarioDetail\n      );\n  }\n\n  getScenarioDetailLocalCapacity(id): void {\n    this.scenarioDetailService.getScenarioDetailLocalCapacity(id)\n      .subscribe(\n        scenarioDetail => this.scenarioDetailLocalCapacity = scenarioDetail\n      );\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  runScenario(id): void {\n    console.log(`Running scenario ${id}`);\n    electron.ipcRenderer.send('runScenario', id)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ScenarioDetail } from \"./scenario-detail\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScenarioDetailService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  private scenariosBaseURL = 'http://127.0.0.1:8080/scenarios/';\n\n  getScenarioDetailAll(id: number): Observable<ScenarioDetail[]> {\n    console.log(`${this.scenariosBaseURL}${id}`);\n    return this.http.get<ScenarioDetail[]>(`${this.scenariosBaseURL}${id}`)\n  }\n\n  getScenarioDetailFeatures(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/features`\n    )\n  }\n\n  getScenarioDetailTemporal(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/temporal`\n    )\n  }\n\n  getScenarioDetailGeographyLoadZones(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/geography-load-zones`\n    )\n  }\n\n  getScenarioDetailProjectCapacity(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/project-capacity`\n    )\n  }\n\n  getScenarioDetailProjectOpChars(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/project-opchars`\n    )\n  }\n\n  getScenarioDetailFuels(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/fuels`\n    )\n  }\n\n  getScenarioDetailTransmissionCapacity(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/transmission-capacity`\n    )\n  }\n\n  getScenarioDetailTransmissionOpChars(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/transmission-opchars`\n    )\n  }\n\n  getScenarioDetailTransmissionHurdleRates(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/transmission-hurdle-rates`\n    )\n  }\n\n  getScenarioDetailTransmissionSimFlow(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/transmission-sim-flow`\n    )\n  }\n\n  getScenarioDetailLoad(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/load`\n    )\n  }\n\n  getScenarioDetailLFUp(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/lf-up`\n    )\n  }\n\n  getScenarioDetailLFDown(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/lf-down`\n    )\n  }\n\n  getScenarioDetailRegUp(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/reg-up`\n    )\n  }\n\n  getScenarioDetailRegDown(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/reg-down`\n    )\n  }\n\n  getScenarioDetailSpin(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/spin`\n    )\n  }\n\n  getScenarioDetailFreqResp(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/freq-resp`\n    )\n  }\n\n  getScenarioDetailRPS(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/rps`\n    )\n  }\n\n  getScenarioDetailCarbonCap(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/carbon-cap`\n    )\n  }\n\n  getScenarioDetailPRM(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/prm`\n    )\n  }\n\n  getScenarioDetailLocalCapacity(id: number): Observable<ScenarioDetail[]> {\n    return this.http.get<ScenarioDetail[]>(\n      `${this.scenariosBaseURL}${id}/local-capacity`\n    )\n  }\n}\n","module.exports = \"/* scenarioNewComponent's private CSS styles */\\n\\n.scenario-detail th {\\n  background-color: midnightblue;\\n  color: white;\\n}\\n\\n.scenario-detail th, td {\\n    padding: 5px;\\n    text-align: left;\\n}\\n\\n.scenario-detail tr:nth-child(odd) {\\n  background-color: #f2f2f2;\\n}\\n\\n.scenario-detail td:first-child {\\n  background-color: lightsteelblue;\\n}\\n\\n.scenario-detail caption {\\n  font-weight: bold;\\n  text-align: left;\\n  margin-top: 10px;\\n  margin-bottom: 1px;\\n}\\n\\n.button-primary {\\n  background:aliceblue;\\n  color:midnightblue;\\n  font-size: medium;\\n  font-weight: bold;\\n  margin-top: 10px;\\n  padding: 5px 10px;\\n  cursor:pointer\\n}\\n\\n.button-primary:hover {\\n  background-color: darkblue;\\n  color: white\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NlbmFyaW8tbmV3L3NjZW5hcmlvLW5ldy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4Qzs7QUFFOUM7RUFDRSw4QkFBOEI7RUFDOUIsWUFBWTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGdCQUFnQjtBQUNwQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLG9CQUFvQjtFQUNwQixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCO0FBQ0Y7O0FBRUE7RUFDRSwwQkFBMEI7RUFDMUI7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3NjZW5hcmlvLW5ldy9zY2VuYXJpby1uZXcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHNjZW5hcmlvTmV3Q29tcG9uZW50J3MgcHJpdmF0ZSBDU1Mgc3R5bGVzICovXG5cbi5zY2VuYXJpby1kZXRhaWwgdGgge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBtaWRuaWdodGJsdWU7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLnNjZW5hcmlvLWRldGFpbCB0aCwgdGQge1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4uc2NlbmFyaW8tZGV0YWlsIHRyOm50aC1jaGlsZChvZGQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcbn1cblxuLnNjZW5hcmlvLWRldGFpbCB0ZDpmaXJzdC1jaGlsZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0c3RlZWxibHVlO1xufVxuXG4uc2NlbmFyaW8tZGV0YWlsIGNhcHRpb24ge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWJvdHRvbTogMXB4O1xufVxuXG4uYnV0dG9uLXByaW1hcnkge1xuICBiYWNrZ3JvdW5kOmFsaWNlYmx1ZTtcbiAgY29sb3I6bWlkbmlnaHRibHVlO1xuICBmb250LXNpemU6IG1lZGl1bTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xuICBjdXJzb3I6cG9pbnRlclxufVxuXG4uYnV0dG9uLXByaW1hcnk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrYmx1ZTtcbiAgY29sb3I6IHdoaXRlXG59XG4iXX0= */\"","module.exports = \"<h2><span>New Scenario: </span>{{newScenarioForm.value.scenarioName}}</h2>\\n\\n<form [formGroup]=\\\"newScenarioForm\\\" (ngSubmit)=\\\"saveNewScenario()\\\">\\n\\n  <p><label>\\n  Scenario Name:\\n  <input type=\\\"text\\\" formControlName=\\\"scenarioName\\\">\\n</label></p>\\n\\n  <p><label>\\n  Description:\\n  <input type=\\\"text\\\" formControlName=\\\"scenarioDescription\\\">\\n</label></p>\\n\\n\\n<table class=\\\"scenario-detail\\\">\\n  <caption>Features</caption>\\n    <tr>\\n      <th>Name</th>\\n      <th>Value</th>\\n    </tr>\\n      <ng-container *ngFor=\\\"let sd of features\\\">\\n         <tr>\\n           <td>{{sd.featureName}}</td>\\n           <td>\\n             <select formControlName=\\\"{{sd.formControlName}}\\\">\\n                <option *ngFor=\\\"let selectionOption of featureSelectionOption\\\">\\n                  {{selectionOption}}\\n                </option>\\n              </select>\\n           </td>\\n         </tr>\\n      </ng-container>\\n</table>\\n\\n<ng-container *ngFor=\\\"let tbl of ScenarioNewStructure\\\">\\n  <table class=\\\"scenario-detail\\\">\\n    <caption>{{tbl.tableCaption}}</caption>\\n        <tr>\\n          <th>Name</th>\\n          <th>Value</th>\\n        </tr>\\n      <ng-container *ngFor=\\\"let tblRow of tbl.settingRows\\\">\\n         <tr>\\n           <td>{{tblRow.rowName}}</td>\\n           <td>\\n             <select formControlName=\\\"{{tblRow.rowFormControlName}}\\\">\\n                <option value=\\\"\\\"></option>\\n                <option *ngFor=\\\"let settingOption of tblRow.settingOptions\\\">\\n                  {{settingOption.name}}\\n                </option>\\n              </select>\\n           </td>\\n        </tr>\\n      </ng-container>\\n  </table>\\n</ng-container>\\n\\n<button class=\\\"button-primary\\\">Validate Scenario (inactive)</button>\\n\\n<button type=\\\"submit\\\" [disabled]=\\\"!newScenarioForm.valid\\\"\\n        class=\\\"button-primary\\\">\\n  Save Scenario</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { FormControl, FormGroup } from '@angular/forms';\n\nconst io = (<any>window).require('socket.io-client');\n\nimport { Setting, ScenarioNewService } from './scenario-new.service'\n\n@Component({\n  selector: 'app-scenario-new',\n  templateUrl: './scenario-new.component.html',\n  styleUrls: ['./scenario-new.component.css']\n})\n\n\nexport class ScenarioNewComponent implements OnInit {\n\n  // The final structure we'll iterate over\n  ScenarioNewStructure: SettingsTable[];\n\n  // Setting elements\n\n  // For the features\n  // TODO: can we consolidate with structure for settings below?\n  features: Feature[];\n  featureSelectionOption: string[];\n\n  // Temporal settings\n  temporalSettingsTable: SettingsTable;\n  temporalSettingOptions: Setting[];\n\n  // Load zone settings\n  loadZoneSettingsTable: SettingsTable;\n  geographyLoadZonesSettingOptions: Setting[];\n  projectLoadZonesSettingOptions: Setting[];\n  transmissionLoadZonesSettingOptions: Setting[];\n\n  // System load settings\n  systemLoadSettingsTable: SettingsTable;\n  systemLoadSettingOptions: Setting[];\n\n  // Project capacity settings\n  projectCapacitySettingsTable: SettingsTable;\n  projectPortfolioSettingOptions: Setting[];\n  projectExistingCapacitySettingOptions: Setting[];\n  projectExistingFixedCostSettingOptions: Setting[];\n  projectNewCostSettingOptions: Setting[];\n  projectNewPotentialSettingOptions: Setting[];\n  projectAvailabilitySettingOptions: Setting[];\n\n  // Project operational characteristics settings\n  projectOperationalCharsSettingsTable: SettingsTable;\n  projectOperationalCharsSettingOptions: Setting[];\n\n  // Fuel settings\n  fuelSettingsTable: SettingsTable;\n  fuelSettingOptions: Setting[];\n  fuelPricesSettingOptions: Setting[];\n\n  // Transmission capacity settings\n  transmissionCapacitySettingsTable: SettingsTable;\n  transmissionPortfolioSettingOptions: Setting[];\n  transmissionExistingCapacitySettingOptions: Setting[];\n\n  // Transmission operational characteristics\n  transmissionOperationalCharsSettingsTable: SettingsTable;\n  transmissionOperationalCharsSettingOptions: Setting[];\n\n  // Transission hurdle rates settings\n  transmissionHurdleRatesSettingsTable: SettingsTable;\n  transmissionHurdleRatesSettingOptions: Setting[];\n\n  // Transmission simultaneous flow limits settings\n  transmissionSimultaneousFlowLimitsSettingsTable: SettingsTable;\n  transmissionSimultaneousFlowLimitsSettingOptions: Setting[];\n  transmissionSimultaneousFlowLimitLineGroupsSettingOptions: Setting[];\n\n  // Load-following-up settings\n  loadFollowingUpSettingsTable: SettingsTable;\n  geographyLoadFollowingUpBAsSettingOptions: Setting[];\n  loadFollowingUpRequirementSettingOptions: Setting[];\n  projectLoadFollowingUpBAsSettingOptions: Setting[];\n\n  // Load-following-down settings\n  loadFollowingDownSettingsTable: SettingsTable;\n  geographyLoadFollowingDownBAsSettingOptions: Setting[];\n  loadFollowingDownRequirementSettingOptions: Setting[];\n  projectLoadFollowingDownBAsSettingOptions: Setting[];\n\n  // Regulation up settings\n  regulationUpSettingsTable: SettingsTable;\n  geographyRegulationUpBAsSettingOptions: Setting[];\n  regulationUpRequirementSettingOptions: Setting[];\n  projectRegulationUpBAsSettingOptions: Setting[];\n\n  // Regulation down settings\n  regulationDownSettingsTable: SettingsTable;\n  geographyRegulationDownBAsSettingOptions: Setting[];\n  regulationDownRequirementSettingOptions: Setting[];\n  projectRegulationDownBAsSettingOptions: Setting[];\n\n  // Spinning reserves settings\n  spinningReservesSettingsTable: SettingsTable;\n  geographySpinningReservesBAsSettingOptions: Setting[];\n  spinningReservesRequirementSettingOptions: Setting[];\n  projectSpinningReservesBAsSettingOptions: Setting[];\n\n  // Frequency response settings\n  frequencyResponseSettingsTable: SettingsTable;\n  geographyFrequencyResponseBAsSettingOptions: Setting[];\n  frequencyResponseRequirementSettingOptions: Setting[];\n  projectFrequencyResponseBAsSettingOptions: Setting[];\n\n  // RPS settings\n  rpsSettingsTable: SettingsTable;\n  geographyRPSAreasSettingOptions: Setting[];\n  rpsTargetSettingOptions: Setting[];\n  projectRPSAreasSettingOptions: Setting[];\n\n  // Carbon cap settings\n  carbonCapSettingsTable: SettingsTable;\n  geographyCarbonCapAreasSettingOptions: Setting[];\n  carbonCapTargetSettingOptions: Setting[];\n  projectCarbonCapAreasSettingOptions: Setting[];\n  transmissionCarbonCapAreasSettingOptions: Setting[];\n\n  // PRM settings\n  prmSettingsTable: SettingsTable;\n  geographyPRMAreasSettingOptions: Setting[];\n  prmRequirementSettingOptions: Setting[];\n  projectPRMAreasSettingOptions: Setting[];\n  projectELCCCharsSettingOptions: Setting[];\n  elccSurfaceSettingOptions: Setting[];\n  projectPRMEnergyOnlySettingOptions: Setting[];\n\n  // Local capacity settings\n  localCapacitySettingsTable: SettingsTable;\n  geographyLocalCapacityAreasSettingOptions: Setting[];\n  localCapacityRequirementSettingOptions: Setting[];\n  projectLocalCapacityAreasSettingOptions: Setting[];\n  projectLocalCapacityCharsSettingOptions: Setting[];\n\n  // Tuning settings\n  tuningSettingsTable: SettingsTable;\n  tuningSettingOptions: Setting[];\n\n  // Create the form\n  newScenarioForm = new FormGroup({\n    scenarioName: new FormControl(''),\n    scenarioDescription: new FormControl(''),\n    featureFuels: new FormControl(''),\n    featureTransmission: new FormControl(''),\n    featureTransmissionHurdleRates: new FormControl(''),\n    featureSimFlowLimits: new FormControl(''),\n    featureLFUp: new FormControl(''),\n    featureLFDown: new FormControl(''),\n    featureRegUp: new FormControl(''),\n    featureRegDown: new FormControl(''),\n    featureSpin: new FormControl(''),\n    featureFreqResp: new FormControl(''),\n    featureRPS: new FormControl(''),\n    featureCarbonCap: new FormControl(''),\n    featureTrackCarbonImports: new FormControl(''),\n    featurePRM: new FormControl(''),\n    featureELCCSurface: new FormControl(''),\n    featureLocalCapacity: new FormControl(''),\n    temporalSetting: new FormControl(''),\n    geographyLoadZonesSetting: new FormControl(''),\n    geographyProjectLoadZonesSetting: new FormControl(''),\n    geographyTxLoadZonesSetting: new FormControl(''),\n    systemLoadSetting: new FormControl(''),\n    projectPortfolioSetting: new FormControl(''),\n    projectExistingCapacitySetting: new FormControl(''),\n    projectExistingFixedCostSetting: new FormControl(''),\n    projectNewCostSetting: new FormControl(''),\n    projectNewPotentialSetting: new FormControl(''),\n    projectAvailabilitySetting: new FormControl(''),\n    projectOperationalCharsSetting: new FormControl(''),\n    projectFuelsSetting: new FormControl(''),\n    fuelPricesSetting: new FormControl(''),\n    transmissionPortfolioSetting: new FormControl(''),\n    transmissionExistingCapacitySetting: new FormControl(''),\n    transmissionOperationalCharsSetting: new FormControl(''),\n    transmissionHurdleRatesSetting: new FormControl(''),\n    transmissionSimultaneousFlowLimitsSetting: new FormControl(''),\n    transmissionSimultaneousFlowLimitLineGroupsSetting: new FormControl(''),\n    geographyLoadFollowingUpBAsSetting: new FormControl(''),\n    loadFollowingUpRequirementSetting: new FormControl(''),\n    projectLoadFollowingUpBAsSetting: new FormControl(''),\n    geographyLoadFollowingDownBAsSetting: new FormControl(''),\n    loadFollowingDownRequirementSetting: new FormControl(''),\n    projectLoadFollowingDownBAsSetting: new FormControl(''),\n    geographyRegulationUpBAsSetting: new FormControl(''),\n    regulationUpRequirementSetting: new FormControl(''),\n    projectRegulationUpBAsSetting: new FormControl(''),\n    geographyRegulationDownBAsSetting: new FormControl(''),\n    regulationDownRequirementSetting: new FormControl(''),\n    projectRegulationDownBAsSetting: new FormControl(''),\n    geographySpinningReservesBAsSetting: new FormControl(''),\n    spinningReservesRequirementSetting: new FormControl(''),\n    projectSpinningReservesBAsSetting: new FormControl(''),\n    geographyFrequencyResponseBAsSetting: new FormControl(''),\n    frequencyResponseRequirementSetting: new FormControl(''),\n    projectFrequencyResponseBAsSetting: new FormControl(''),\n    geographyRPSAreasSetting: new FormControl(''),\n    rpsTargetSetting: new FormControl(''),\n    projectRPSAreasSetting: new FormControl(''),\n    geographyCarbonCapAreasSetting: new FormControl(''),\n    carbonCapTargetSetting: new FormControl(''),\n    projectCarbonCapAreasSetting: new FormControl(''),\n    transmissionCarbonCapAreasSetting: new FormControl(''),\n    geographyPRMAreasSetting: new FormControl(''),\n    prmRequirementSetting: new FormControl(''),\n    projectPRMAreasSetting: new FormControl(''),\n    projectELCCCharsSetting: new FormControl(''),\n    elccSurfaceSetting: new FormControl(''),\n    projectPRMEnergyOnlySetting: new FormControl(''),\n    geographyLocalCapacityAreasSetting: new FormControl(''),\n    localCapacityRequirementSetting: new FormControl(''),\n    projectLocalCapacityAreasSetting: new FormControl(''),\n    projectLocalCapacityCharsSetting: new FormControl(''),\n    tuningSetting: new FormControl('')\n    });\n\n  constructor(private scenarioNewService: ScenarioNewService) {\n    this.features = [];\n    const featureFuels = new Feature();\n    featureFuels.featureName = 'feature_fuels';\n    featureFuels.formControlName = 'featureFuels';\n    this.features.push(featureFuels);\n\n    const featureTransmission = new Feature();\n    featureTransmission.featureName = 'feature_transmission';\n    featureTransmission.formControlName = 'featureTransmission';\n    this.features.push(featureTransmission);\n\n    const featureTransmissionHurdleRates = new Feature();\n    featureTransmissionHurdleRates.featureName =\n      'feature_transmission_hurdle_rates';\n    featureTransmissionHurdleRates.formControlName =\n      'featureTransmissionHurdleRates';\n    this.features.push(featureTransmissionHurdleRates);\n\n    const featureSimFlowLimits = new Feature();\n    featureSimFlowLimits.featureName = 'feature_simultaneous_flow_limits';\n    featureSimFlowLimits.formControlName = 'featureSimFlowLimits';\n    this.features.push(featureSimFlowLimits);\n\n    const featureLFUp = new Feature();\n    featureLFUp.featureName = 'feature_load_following_up';\n    featureLFUp.formControlName = 'featureLFUp';\n    this.features.push(featureLFUp);\n\n    const featureLFDown = new Feature();\n    featureLFDown.featureName = 'feature_load_following_down';\n    featureLFDown.formControlName = 'featureLFDown';\n    this.features.push(featureLFDown);\n\n    const featureRegDown = new Feature();\n    featureRegDown.featureName = 'feature_regulation_down';\n    featureRegDown.formControlName = 'featureRegDown';\n    this.features.push(featureRegDown);\n\n    const featureRegUp = new Feature();\n    featureRegUp.featureName = 'feature_regulation_up';\n    featureRegUp.formControlName = 'featureRegUp';\n    this.features.push(featureRegUp);\n\n    const featureSpin = new Feature();\n    featureSpin.featureName = 'feature_spinning_reserves';\n    featureSpin.formControlName = 'featureSpin';\n    this.features.push(featureSpin);\n\n    const featureFreqResp = new Feature();\n    featureFreqResp.featureName = 'feature_frequency_response';\n    featureFreqResp.formControlName = 'featureFreqResp';\n    this.features.push(featureFreqResp);\n\n    const featureRPS = new Feature();\n    featureRPS.featureName = 'feature_rps';\n    featureRPS.formControlName = 'featureRPS';\n    this.features.push(featureRPS);\n\n    const featureCarbonCap = new Feature();\n    featureCarbonCap.featureName = 'feature_carbon_cap';\n    featureCarbonCap.formControlName = 'featureCarbonCap';\n    this.features.push(featureCarbonCap);\n\n    const featureTrackCarbonImports = new Feature();\n    featureTrackCarbonImports.featureName = 'feature_track_carbon_imports';\n    featureTrackCarbonImports.formControlName = 'featureTrackCarbonImports';\n    this.features.push(featureTrackCarbonImports);\n\n    const featurePRM = new Feature();\n    featurePRM.featureName = 'feature_prm';\n    featurePRM.formControlName = 'featurePRM';\n    this.features.push(featurePRM);\n\n    const featureELCCSurface = new Feature();\n    featureELCCSurface.featureName = 'feature_elcc_surface';\n    featureELCCSurface.formControlName = 'featureELCCSurface';\n    this.features.push(featureELCCSurface);\n\n    const featureLocalCapacity = new Feature();\n    featureLocalCapacity.featureName = 'feature_local_capacity';\n    featureLocalCapacity.formControlName = 'featureLocalCapacity';\n    this.features.push(featureLocalCapacity);\n\n\n    this.featureSelectionOption = featureSelectionOptions();\n\n\n  }\n\n  ngOnInit() {\n    this.ScenarioNewStructure = [];\n    this.getSettingOptionsTemporal();\n    this.getSettingOptionsLoadZones();\n    this.getSettingOptionsLoad();\n    this.getSettingOptionsProjectCapacity();\n    this.getSettingOptionsProjectOperationalChars();\n    this.getSettingOptionsFuels();\n    this.getSettingOptionsTransmissionCapacity();\n    this.getSettingOptionsTransmissionOperationalChars();\n    this.getSettingOptionsTransmissionHurdleRates();\n    this.getSettingOptionsTransmissionSimultaneousFlowLimits();\n    this.getSettingOptionsLFReservesUp();\n    this.getSettingOptionsLFReservesDown();\n    this.getSettingOptionsRegulationUp();\n    this.getSettingOptionsRegulationDown();\n    this.getSettingOptionsSpinningReserves();\n    this.getSettingOptionsFrequencyResponse();\n    this.getSettingOptionsRPS();\n    this.getSettingOptionsCarbonCap();\n    this.getSettingOptionsPRM();\n    this.getSettingOptionsLocalCapacity();\n    this.getSettingOptionsTuning();\n  }\n\n  getSettingOptionsTemporal(): void {\n    // Set the setting table captions\n    this.temporalSettingsTable = new SettingsTable();\n    this.temporalSettingsTable.tableCaption = 'Temporal settings';\n    this.temporalSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingTemporal()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.temporalSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'temporal',\n            'temporalSetting',\n             this.temporalSettingOptions\n          );\n\n          // Add the row to the table\n          this.temporalSettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.temporalSettingsTable);\n  }\n\n  getSettingOptionsLoadZones(): void {\n    // Set the setting table captions\n    this.loadZoneSettingsTable = new SettingsTable();\n    this.loadZoneSettingsTable.tableCaption = 'Load zone settings';\n    this.loadZoneSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingLoadZones()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.geographyLoadZonesSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'geography_load_zones',\n            'geographyLoadZonesSetting',\n            this.geographyLoadZonesSettingOptions\n          );\n\n          // Add the row to the table\n          this.loadZoneSettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectLoadZones()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectLoadZonesSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_load_zones',\n            'geographyProjectLoadZonesSetting',\n            this.projectLoadZonesSettingOptions\n          );\n\n          // Add the row to the table\n          this.loadZoneSettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingTransmissionLoadZones()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.transmissionLoadZonesSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'transmission_load_zones',\n            'geographyTxLoadZonesSetting',\n            this.transmissionLoadZonesSettingOptions\n          );\n\n          // Add the row to the table\n          this.loadZoneSettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.loadZoneSettingsTable);\n\n  }\n\n  getSettingOptionsLoad(): void {\n    // Set the setting table captions\n    this.systemLoadSettingsTable = new SettingsTable();\n    this.systemLoadSettingsTable.tableCaption = 'System load';\n    this.systemLoadSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingSystemLoad()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.systemLoadSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'load_profile',\n            'systemLoadSetting',\n            this.systemLoadSettingOptions\n          );\n\n          // Add the row to the table\n          this.systemLoadSettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.systemLoadSettingsTable);\n\n  }\n\n  getSettingOptionsProjectCapacity(): void {\n    // Set the setting table captions\n    this.projectCapacitySettingsTable = new SettingsTable();\n    this.projectCapacitySettingsTable.tableCaption = 'Project capacity';\n    this.projectCapacitySettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingProjectPortfolio()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectPortfolioSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_portfolio',\n            'projectPortfolioSetting',\n            this.projectPortfolioSettingOptions\n          );\n\n          // Add the row to the table\n          this.projectCapacitySettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectExistingCapacity()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectExistingCapacitySettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_existing_capacity',\n            'projectExistingCapacitySetting',\n            this.projectExistingCapacitySettingOptions\n          );\n\n          // Add the row to the table\n          this.projectCapacitySettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectExistingFixedCost()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectExistingFixedCostSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_existing_fixed_cost',\n            'projectExistingFixedCostSetting',\n            this.projectExistingFixedCostSettingOptions\n          );\n\n          // Add the row to the table\n          this.projectCapacitySettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectNewCost()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectNewCostSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_new_cost',\n            'projectNewCostSetting',\n            this.projectNewCostSettingOptions\n          );\n\n          // Add the row to the table\n          this.projectCapacitySettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectNewPotential()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectNewPotentialSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_new_potential',\n            'projectNewPotentialSetting',\n            this.projectNewPotentialSettingOptions\n          );\n\n          // Add the row to the table\n          this.projectCapacitySettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectAvailability()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectAvailabilitySettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_availability',\n            'projectAvailabilitySetting',\n            this.projectAvailabilitySettingOptions\n          );\n\n          // Add the row to the table\n          this.projectCapacitySettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.projectCapacitySettingsTable);\n\n  }\n\n  getSettingOptionsProjectOperationalChars(): void {\n    // Set the setting table captions\n    this.projectOperationalCharsSettingsTable = new SettingsTable();\n    this.projectOperationalCharsSettingsTable.tableCaption =\n      'Project operational characteristics';\n    this.projectOperationalCharsSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingProjectOpChar()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectOperationalCharsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_operational_characteristics',\n            'projectOperationalCharsSetting',\n            this.projectOperationalCharsSettingOptions\n          );\n\n          // Add the row to the table\n          this.projectOperationalCharsSettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.projectOperationalCharsSettingsTable);\n\n  }\n\n  getSettingOptionsFuels(): void {\n    // Set the setting table captions\n    this.fuelSettingsTable = new SettingsTable();\n    this.fuelSettingsTable.tableCaption ='Fuels settings';\n    this.fuelSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingFuels()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.fuelSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'fuel_characteristics',\n            'projectFuelsSetting',\n            this.fuelSettingOptions\n          );\n\n          // Add the row to the table\n          this.fuelSettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    this.scenarioNewService.getSettingFuelPrices()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.fuelPricesSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'fuel_prices',\n            'fuelPricesSetting',\n            this.fuelPricesSettingOptions\n          );\n\n          // Add the row to the table\n          this.fuelSettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.fuelSettingsTable);\n\n  }\n  \n  getSettingOptionsTransmissionCapacity(): void {\n    // Set the setting table captions\n    this.transmissionCapacitySettingsTable = new SettingsTable();\n    this.transmissionCapacitySettingsTable.tableCaption =\n      'Transmission capacity';\n    this.transmissionCapacitySettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingTransmissionPortfolio()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.transmissionPortfolioSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'transmission_portfolio',\n            'transmissionPortfolioSetting',\n            this.transmissionPortfolioSettingOptions\n          );\n\n          // Add the row to the table\n          this.transmissionCapacitySettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingTransmissionExistingCapacity()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.transmissionExistingCapacitySettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'transmission_existing_capacity',\n            'transmissionExistingCapacitySetting',\n            this.transmissionExistingCapacitySettingOptions\n          );\n\n          // Add the row to the table\n          this.transmissionCapacitySettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.transmissionCapacitySettingsTable);\n\n  }\n  \n  getSettingOptionsTransmissionOperationalChars(): void {\n    // Set the setting table captions\n    this.transmissionOperationalCharsSettingsTable = new SettingsTable();\n    this.transmissionOperationalCharsSettingsTable.tableCaption =\n      'Transmission operational characteristics';\n    this.transmissionOperationalCharsSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingTransmissionOpChar()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.transmissionOperationalCharsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'transmission_operational_characteristics',\n            'transmissionOperationalCharsSetting',\n            this.transmissionOperationalCharsSettingOptions\n          );\n\n          // Add the row to the table\n          this.transmissionOperationalCharsSettingsTable.settingRows.push(\n            newRow\n          );\n\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.transmissionOperationalCharsSettingsTable);\n\n  }\n  \n  getSettingOptionsTransmissionHurdleRates(): void {\n    // Set the setting table captions\n    this.transmissionHurdleRatesSettingsTable = new SettingsTable();\n    this.transmissionHurdleRatesSettingsTable.tableCaption =\n      'Transmission hurdle rates';\n    this.transmissionHurdleRatesSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingTransmissionHurdleRates()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.transmissionHurdleRatesSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'transmission_hurdle_rates',\n            'transmissionHurdleRatesSetting',\n            this.transmissionHurdleRatesSettingOptions\n          );\n\n          // Add the row to the table\n          this.transmissionHurdleRatesSettingsTable.settingRows.push(\n            newRow\n          );\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.transmissionHurdleRatesSettingsTable);\n  }\n\n  getSettingOptionsTransmissionSimultaneousFlowLimits(): void {\n    // Set the setting table captions\n    this.transmissionSimultaneousFlowLimitsSettingsTable = new SettingsTable();\n    this.transmissionSimultaneousFlowLimitsSettingsTable.tableCaption =\n      'Transmission simultaneous flow limits';\n    this.transmissionSimultaneousFlowLimitsSettingsTable.settingRows = [];\n\n    // Get the settings\n    this.scenarioNewService.getSettingTransmissionSimFlowLimits()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.transmissionSimultaneousFlowLimitsSettingOptions =\n            scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'transmission_simultaneous_flow_limits',\n            'transmissionSimultaneousFlowLimitsSetting',\n            this.transmissionSimultaneousFlowLimitsSettingOptions\n          );\n\n          // Add the row to the table\n          this.transmissionSimultaneousFlowLimitsSettingsTable.settingRows\n            .push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingTransmissionSimFlowLimitGroups()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.transmissionSimultaneousFlowLimitLineGroupsSettingOptions =\n            scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'transmission_simultaneous_flow_limit_line_groups',\n            'transmissionSimultaneousFlowLimitLineGroupsSetting',\n            this.transmissionSimultaneousFlowLimitLineGroupsSettingOptions\n          );\n\n          // Add the row to the table\n          this.transmissionSimultaneousFlowLimitsSettingsTable.settingRows\n            .push(newRow);\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(\n      this.transmissionSimultaneousFlowLimitsSettingsTable\n    );\n  }\n\n  getSettingOptionsLFReservesUp(): void {\n    // Set the setting table captions\n    this.loadFollowingUpSettingsTable = new SettingsTable();\n    this.loadFollowingUpSettingsTable.tableCaption = 'Load following up settings';\n    this.loadFollowingUpSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingLFReservesUpBAs()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.geographyLoadFollowingUpBAsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'geography_load_following_up_bas',\n            'geographyLoadFollowingUpBAsSetting',\n            this.geographyLoadFollowingUpBAsSettingOptions\n          );\n\n          // Add the row to the table\n          this.loadFollowingUpSettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectLFReservesUpBAs()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectLoadFollowingUpBAsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_load_following_up_bas',\n            'projectLoadFollowingUpBAsSetting',\n            this.projectLoadFollowingUpBAsSettingOptions\n          );\n\n          // Add the row to the table\n          this.loadFollowingUpSettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingLFReservesUpRequirement()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.loadFollowingUpRequirementSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'load_following_up_requirement',\n            'loadFollowingUpRequirementSetting',\n            this.loadFollowingUpRequirementSettingOptions\n          );\n\n          // Add the row to the table\n          this.loadFollowingUpSettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.loadFollowingUpSettingsTable);\n\n  }\n  \n  getSettingOptionsLFReservesDown(): void {\n    // Set the setting table captions\n    this.loadFollowingDownSettingsTable = new SettingsTable();\n    this.loadFollowingDownSettingsTable.tableCaption = 'Load following down settings';\n    this.loadFollowingDownSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingLFReservesDownBAs()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.geographyLoadFollowingDownBAsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'geography_load_following_down_bas',\n            'geographyLoadFollowingDownBAsSetting',\n            this.geographyLoadFollowingDownBAsSettingOptions\n          );\n\n          // Add the row to the table\n          this.loadFollowingDownSettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectLFReservesDownBAs()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectLoadFollowingDownBAsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_load_following_down_bas',\n            'projectLoadFollowingDownBAsSetting',\n            this.projectLoadFollowingDownBAsSettingOptions\n          );\n\n          // Add the row to the table\n          this.loadFollowingDownSettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingLFReservesDownRequirement()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.loadFollowingDownRequirementSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'load_following_down_requirement',\n            'loadFollowingDownRequirementSetting',\n            this.loadFollowingDownRequirementSettingOptions\n          );\n\n          // Add the row to the table\n          this.loadFollowingDownSettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.loadFollowingDownSettingsTable);\n\n  }\n  \n  getSettingOptionsRegulationUp(): void {\n    // Set the setting table captions\n    this.regulationUpSettingsTable = new SettingsTable();\n    this.regulationUpSettingsTable.tableCaption = 'Regulation up settings';\n    this.regulationUpSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingRegulationUpBAs()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.geographyRegulationUpBAsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'geography_regulation_up_bas',\n            'geographyRegulationUpBAsSetting',\n            this.geographyRegulationUpBAsSettingOptions\n          );\n\n          // Add the row to the table\n          this.regulationUpSettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectRegulationUpBAs()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectRegulationUpBAsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_regulation_up_bas',\n            'projectRegulationUpBAsSetting',\n            this.projectRegulationUpBAsSettingOptions\n          );\n\n          // Add the row to the table\n          this.regulationUpSettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingRegulationUpRequirement()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.regulationUpRequirementSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'regulation_up_requirement',\n            'regulationUpRequirementSetting',\n            this.regulationUpRequirementSettingOptions\n          );\n\n          // Add the row to the table\n          this.regulationUpSettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.regulationUpSettingsTable);\n\n  }\n  \n  getSettingOptionsRegulationDown(): void {\n    // Set the setting table captions\n    this.regulationDownSettingsTable = new SettingsTable();\n    this.regulationDownSettingsTable.tableCaption = 'Regulation down settings';\n    this.regulationDownSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingRegulationDownBAs()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.geographyRegulationDownBAsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'geography_regulation_down_bas',\n            'geographyRegulationDownBAsSetting',\n            this.geographyRegulationDownBAsSettingOptions\n          );\n\n          // Add the row to the table\n          this.regulationDownSettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectRegulationDownBAs()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectRegulationDownBAsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_regulation_down_bas',\n            'projectRegulationDownBAsSetting',\n            this.projectRegulationDownBAsSettingOptions\n          );\n\n          // Add the row to the table\n          this.regulationDownSettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingRegulationDownRequirement()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.regulationDownRequirementSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'regulation_down_requirement',\n            'regulationDownRequirementSetting',\n            this.regulationDownRequirementSettingOptions\n          );\n\n          // Add the row to the table\n          this.regulationDownSettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.regulationDownSettingsTable);\n\n  }\n  \n  getSettingOptionsSpinningReserves(): void {\n    // Set the setting table captions\n    this.spinningReservesSettingsTable = new SettingsTable();\n    this.spinningReservesSettingsTable.tableCaption = '' +\n      'Spinning reserves settings';\n    this.spinningReservesSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingSpinningReservesBAs()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.geographySpinningReservesBAsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'geography_spinning_reserves_bas',\n            'geographySpinningReservesBAsSetting',\n            this.geographySpinningReservesBAsSettingOptions\n          );\n\n          // Add the row to the table\n          this.spinningReservesSettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectSpinningReservesBAs()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectSpinningReservesBAsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_spinning_reserves_bas',\n            'projectSpinningReservesBAsSetting',\n            this.projectSpinningReservesBAsSettingOptions\n          );\n\n          // Add the row to the table\n          this.spinningReservesSettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingSpinningReservesRequirement()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.spinningReservesRequirementSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'spinning_reserves_requirement',\n            'spinningReservesRequirementSetting',\n            this.spinningReservesRequirementSettingOptions\n          );\n\n          // Add the row to the table\n          this.spinningReservesSettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.spinningReservesSettingsTable);\n\n  }\n  \n  getSettingOptionsFrequencyResponse(): void {\n    // Set the setting table captions\n    this.frequencyResponseSettingsTable = new SettingsTable();\n    this.frequencyResponseSettingsTable.tableCaption =\n      'Frequency response settings';\n    this.frequencyResponseSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingFrequencyResponseBAs()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.geographyFrequencyResponseBAsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'geography_frequency_response_bas',\n            'geographyFrequencyResponseBAsSetting',\n            this.geographyFrequencyResponseBAsSettingOptions\n          );\n\n          // Add the row to the table\n          this.frequencyResponseSettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectFrequencyResponseBAs()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectFrequencyResponseBAsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_frequency_response_bas',\n            'projectFrequencyResponseBAsSetting',\n            this.projectFrequencyResponseBAsSettingOptions\n          );\n\n          // Add the row to the table\n          this.frequencyResponseSettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingFrequencyResponseRequirement()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.frequencyResponseRequirementSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'frequency_response_requirement',\n            'frequencyResponseRequirementSetting',\n            this.frequencyResponseRequirementSettingOptions\n          );\n\n          // Add the row to the table\n          this.frequencyResponseSettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.frequencyResponseSettingsTable);\n\n  }\n  \n  getSettingOptionsRPS(): void {\n    // Set the setting table captions\n    this.rpsSettingsTable = new SettingsTable();\n    this.rpsSettingsTable.tableCaption =\n      'RPS settings';\n    this.rpsSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingRPSAreas()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.geographyRPSAreasSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'rps_areas',\n            'geographyRPSAreasSetting',\n            this.geographyRPSAreasSettingOptions\n          );\n\n          // Add the row to the table\n          this.rpsSettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectRPSAreas()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectRPSAreasSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_rps_areas',\n            'projectRPSAreasSetting',\n            this.projectRPSAreasSettingOptions\n          );\n\n          // Add the row to the table\n          this.rpsSettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingRPSRequirement()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.rpsTargetSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'rps_target',\n            'rpsTargetSetting',\n            this.rpsTargetSettingOptions\n          );\n\n          // Add the row to the table\n          this.rpsSettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.rpsSettingsTable);\n\n  }\n  \n  getSettingOptionsCarbonCap(): void {\n    // Set the setting table captions\n    this.carbonCapSettingsTable = new SettingsTable();\n    this.carbonCapSettingsTable.tableCaption =\n      'CarbonCap settings';\n    this.carbonCapSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingCarbonCapAreas()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.geographyCarbonCapAreasSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'carbon_cap_areas',\n            'geographyCarbonCapAreasSetting',\n            this.geographyCarbonCapAreasSettingOptions\n          );\n\n          // Add the row to the table\n          this.carbonCapSettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectCarbonCapAreas()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectCarbonCapAreasSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_carbon_cap_areas',\n            'projectCarbonCapAreasSetting',\n            this.projectCarbonCapAreasSettingOptions\n          );\n\n          // Add the row to the table\n          this.carbonCapSettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingTransmissionCarbonCapAreas()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.transmissionCarbonCapAreasSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'transmission_carbon_cap_areas',\n            'transmissionCarbonCapAreasSetting',\n            this.transmissionCarbonCapAreasSettingOptions\n          );\n\n          // Add the row to the table\n          this.carbonCapSettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingCarbonCapRequirement()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.carbonCapTargetSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'carbon_cap_target',\n            'carbonCapTargetSetting',\n            this.carbonCapTargetSettingOptions\n          );\n\n          // Add the row to the table\n          this.carbonCapSettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.carbonCapSettingsTable);\n\n  }\n  \n  getSettingOptionsPRM(): void {\n    // Set the setting table captions\n    this.prmSettingsTable = new SettingsTable();\n    this.prmSettingsTable.tableCaption =\n      'PRM settings';\n    this.prmSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingPRMAreas()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.geographyPRMAreasSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'prm_areas',\n            'geographyPRMAreasSetting',\n            this.geographyPRMAreasSettingOptions\n          );\n\n          // Add the row to the table\n          this.prmSettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectPRMAreas()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectPRMAreasSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_prm_areas',\n            'projectPRMAreasSetting',\n            this.projectPRMAreasSettingOptions\n          );\n\n          // Add the row to the table\n          this.prmSettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingPRMRequirement()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.prmRequirementSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'prm_requirement',\n            'prmRequirementSetting',\n            this.prmRequirementSettingOptions\n          );\n\n          // Add the row to the table\n          this.prmSettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    this.scenarioNewService.getSettingELCCSurface()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.elccSurfaceSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'elcc_surface',\n            'elccSurfaceSetting',\n            this.elccSurfaceSettingOptions\n          );\n\n          // Add the row to the table\n          this.prmSettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectELCCChars()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectELCCCharsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_elcc_chars',\n            'projectELCCCharsSetting',\n            this.projectELCCCharsSettingOptions\n          );\n\n          // Add the row to the table\n          this.prmSettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectEnergyOnly()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectPRMEnergyOnlySettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_energy_only',\n            'projectPRMEnergyOnlySetting',\n            this.projectPRMEnergyOnlySettingOptions\n          );\n\n          // Add the row to the table\n          this.prmSettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.prmSettingsTable);\n\n  }\n  \n  getSettingOptionsLocalCapacity(): void {\n    // Set the setting table captions\n    this.localCapacitySettingsTable = new SettingsTable();\n    this.localCapacitySettingsTable.tableCaption =\n      'Local capacity settings';\n    this.localCapacitySettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingLocalCapacityAreas()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.geographyLocalCapacityAreasSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'local_capacity_areas',\n            'geographyLocalCapacityAreasSetting',\n            this.geographyLocalCapacityAreasSettingOptions\n          );\n\n          // Add the row to the table\n          this.localCapacitySettingsTable.settingRows.push(newRow);\n\n\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectLocalCapacityAreas()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectLocalCapacityAreasSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_local_capacity_areas',\n            'projectLocalCapacityAreasSetting',\n            this.projectLocalCapacityAreasSettingOptions\n          );\n\n          // Add the row to the table\n          this.localCapacitySettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    this.scenarioNewService.getSettingLocalCapacityRequirement()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.localCapacityRequirementSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'local_capacity_requirement',\n            'localCapacityRequirementSetting',\n            this.localCapacityRequirementSettingOptions\n          );\n\n          // Add the row to the table\n          this.localCapacitySettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    this.scenarioNewService.getSettingProjectLocalCapacityChars()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.projectLocalCapacityCharsSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'project_local_capacity_chars',\n            'projectLocalCapacityCharsSetting',\n            this.projectLocalCapacityCharsSettingOptions\n          );\n\n          // Add the row to the table\n          this.localCapacitySettingsTable.settingRows.push(newRow);\n\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.localCapacitySettingsTable);\n\n  }\n\n  getSettingOptionsTuning(): void {\n    // Set the setting table captions\n    this.tuningSettingsTable = new SettingsTable();\n    this.tuningSettingsTable.tableCaption = 'Tuning settings';\n    this.tuningSettingsTable.settingRows = [];\n\n\n    // Get the settings\n    this.scenarioNewService.getSettingTuning()\n      .subscribe(\n        scenarioSetting => {\n          // Get the settings from the server\n          this.tuningSettingOptions = scenarioSetting;\n\n          // Create the row\n          const newRow = createRow(\n            'tuning',\n            'tuningSetting',\n             this.tuningSettingOptions\n          );\n\n          // Add the row to the table\n          this.tuningSettingsTable.settingRows.push(newRow);\n        }\n      );\n\n    // Add the table to the scenario structure\n    this.ScenarioNewStructure.push(this.tuningSettingsTable);\n  }\n\n  saveNewScenario() {\n    const socket = io.connect('http://127.0.0.1:8080/');\n    socket.on('connect', function() {\n        console.log(`Connection established: ${socket.connected}`);\n    });\n    socket.emit('add_new_scenario', this.newScenarioForm.value);\n  }\n\n}\n\n\nclass Feature {\n  featureName: string;\n  formControlName: string;\n}\n\nclass SettingsTable {\n  tableCaption: string;\n  settingRows: SettingRow[]\n}\n\nclass SettingRow {\n  rowName: string;\n  rowFormControlName: string;\n  settingOptions: Setting[]\n}\n\nfunction featureSelectionOptions() {\n    return ['', 'yes', 'no']\n  }\n\nfunction createRow(rowName: string,\n            rowFormControlName: string,\n            settingOptions: Setting[]) {\n      const settingRow = new SettingRow();\n      settingRow.rowName = rowName;\n      settingRow.rowFormControlName = rowFormControlName;\n      settingRow.settingOptions = settingOptions;\n\n      return settingRow\n  }\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScenarioNewService {\n\n  constructor(private http: HttpClient)\n    { }\n\n  private scenarioSettingsBaseURL = 'http://127.0.0.1:8080/scenario-settings';\n\n  getSettingTemporal(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/temporal`\n    )\n  }\n\n  getSettingLoadZones(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/load-zones`\n    )\n  }\n\n  getSettingProjectLoadZones(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-load-zones`\n    )\n  }\n\n  getSettingTransmissionLoadZones(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/tx-load-zones`\n    )\n  }\n\n  getSettingSystemLoad(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/system-load`\n    )\n  }\n\n  getSettingProjectPortfolio(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-portfolio`\n    )\n  }\n\n  getSettingProjectExistingCapacity(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-existing-capacity`\n    )\n  }\n\n  getSettingProjectExistingFixedCost(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-existing-fixed-cost`\n    )\n  }\n\n  getSettingProjectNewCost(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-new-cost`\n    )\n  }\n\n  getSettingProjectNewPotential(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-new-potential`\n    )\n  }\n\n  getSettingProjectAvailability(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-availability`\n    )\n  }\n\n  getSettingProjectOpChar(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-opchar`\n    )\n  }\n\n  getSettingFuels(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/fuels`\n    )\n  }\n\n  getSettingFuelPrices(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/fuel-prices`\n    )\n  }\n\n  getSettingTransmissionPortfolio(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/transmission-portfolio`\n    )\n  }\n\n  getSettingTransmissionExistingCapacity(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/transmission-existing-capacity`\n    )\n  }\n\n  getSettingTransmissionOpChar(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/transmission-opchar`\n    )\n  }\n\n  getSettingTransmissionHurdleRates(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/transmission-hurdle-rates`\n    )\n  }\n\n  getSettingTransmissionSimFlowLimits(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/transmission-simflow-limits`\n    )\n  }\n\n  getSettingTransmissionSimFlowLimitGroups(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/transmission-simflow-limit-groups`\n    )\n  }\n\n  getSettingLFReservesUpBAs(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/lf-reserves-up-bas`\n    )\n  }\n\n  getSettingProjectLFReservesUpBAs(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-lf-reserves-up-bas`\n    )\n  }\n\n  getSettingLFReservesUpRequirement(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/lf-reserves-up-req`\n    )\n  }\n\n  getSettingLFReservesDownBAs(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/lf-reserves-down-bas`\n    )\n  }\n\n  getSettingProjectLFReservesDownBAs(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-lf-reserves-down-bas`\n    )\n  }\n\n  getSettingLFReservesDownRequirement(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/lf-reserves-down-req`\n    )\n  }\n\n  getSettingRegulationUpBAs(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/regulation-up-bas`\n    )\n  }\n\n  getSettingProjectRegulationUpBAs(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-regulation-up-bas`\n    )\n  }\n\n  getSettingRegulationUpRequirement(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/regulation-up-req`\n    )\n  }\n\n  getSettingRegulationDownBAs(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/regulation-down-bas`\n    )\n  }\n\n  getSettingProjectRegulationDownBAs(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-regulation-down-bas`\n    )\n  }\n\n  getSettingRegulationDownRequirement(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/regulation-down-req`\n    )\n  }\n\n  getSettingSpinningReservesBAs(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/spin-bas`\n    )\n  }\n\n  getSettingProjectSpinningReservesBAs(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-spin-bas`\n    )\n  }\n\n  getSettingSpinningReservesRequirement(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/spin-req`\n    )\n  }\n\n  getSettingFrequencyResponseBAs(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/freq-resp-bas`\n    )\n  }\n\n  getSettingProjectFrequencyResponseBAs(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-freq-resp-bas`\n    )\n  }\n\n  getSettingFrequencyResponseRequirement(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/freq-resp-req`\n    )\n  }\n\n  getSettingRPSAreas(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/rps-areas`\n    )\n  }\n\n  getSettingProjectRPSAreas(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-rps-areas`\n    )\n  }\n\n  getSettingRPSRequirement(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/rps-req`\n    )\n  }\n  \n  getSettingCarbonCapAreas(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/carbon-cap-areas`\n    )\n  }\n\n  getSettingProjectCarbonCapAreas(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-carbon-cap-areas`\n    )\n  }\n\n  getSettingTransmissionCarbonCapAreas(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/transmission-carbon-cap-areas`\n    )\n  }\n\n  getSettingCarbonCapRequirement(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/carbon-cap-req`\n    )\n  }\n\n  getSettingPRMAreas(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/prm-areas`\n    )\n  }\n\n  getSettingProjectPRMAreas(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-prm-areas`\n    )\n  }\n\n  getSettingPRMRequirement(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/prm-req`\n    )\n  }\n\n  getSettingELCCSurface(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/elcc-surface`\n    )\n  }\n\n  getSettingProjectELCCChars(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-elcc-chars`\n    )\n  }\n\n  getSettingProjectEnergyOnly(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-energy-only`\n    )\n  }\n\n  getSettingLocalCapacityAreas(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/local-capacity-areas`\n    )\n  }\n\n  getSettingProjectLocalCapacityAreas(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-local-capacity-areas`\n    )\n  }\n\n  getSettingLocalCapacityRequirement(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/local-capacity-req`\n    )\n  }\n\n  getSettingProjectLocalCapacityChars(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/project-local-capacity-chars`\n    )\n  }\n\n  getSettingTuning(): Observable<Setting[]> {\n    return this.http.get<Setting[]>(\n      `${this.scenarioSettingsBaseURL}/tuning`\n    )\n  }\n}\n\n\nexport class Setting {\n  id: number;\n  name: string;\n}\n","module.exports = \"/* scenariosComponent's private CSS styles */\\n.selected {\\n  background-color: #CFD8DC !important;\\n  color: white;\\n}\\n.scenarios {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  width: 30em;\\n}\\n.scenarios li {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0;\\n  background-color: #EEE;\\n  margin: .5em;\\n  padding: .3em 0;\\n  height: 1.6em;\\n  border-radius: 4px;\\n}\\n.scenarios li.selected:hover {\\n  background-color: #BBD8DC !important;\\n  color: white;\\n}\\n.scenarios li:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n.scenarios .text {\\n  position: relative;\\n  top: -3px;\\n}\\n.scenarios .badge {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #607D8B;\\n  line-height: 1em;\\n  position: relative;\\n  left: -1px;\\n  top: -4px;\\n  height: 1.8em;\\n  margin-right: .8em;\\n  border-radius: 4px 0 0 4px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NlbmFyaW9zL3NjZW5hcmlvcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRDQUE0QztBQUM1QztFQUNFLG9DQUFvQztFQUNwQyxZQUFZO0FBQ2Q7QUFDQTtFQUNFLGlCQUFpQjtFQUNqQixxQkFBcUI7RUFDckIsVUFBVTtFQUNWLFdBQVc7QUFDYjtBQUNBO0VBQ0UsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixPQUFPO0VBQ1Asc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixlQUFlO0VBQ2YsYUFBYTtFQUNiLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0Usb0NBQW9DO0VBQ3BDLFlBQVk7QUFDZDtBQUNBO0VBQ0UsY0FBYztFQUNkLHNCQUFzQjtFQUN0QixVQUFVO0FBQ1o7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixTQUFTO0FBQ1g7QUFDQTtFQUNFLHFCQUFxQjtFQUNyQixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLDRCQUE0QjtFQUM1Qix5QkFBeUI7RUFDekIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsU0FBUztFQUNULGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsMEJBQTBCO0FBQzVCIiwiZmlsZSI6InNyYy9hcHAvc2NlbmFyaW9zL3NjZW5hcmlvcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogc2NlbmFyaW9zQ29tcG9uZW50J3MgcHJpdmF0ZSBDU1Mgc3R5bGVzICovXG4uc2VsZWN0ZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0ZEOERDICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbi5zY2VuYXJpb3Mge1xuICBtYXJnaW46IDAgMCAyZW0gMDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICB3aWR0aDogMzBlbTtcbn1cbi5zY2VuYXJpb3MgbGkge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VFRTtcbiAgbWFyZ2luOiAuNWVtO1xuICBwYWRkaW5nOiAuM2VtIDA7XG4gIGhlaWdodDogMS42ZW07XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbn1cbi5zY2VuYXJpb3MgbGkuc2VsZWN0ZWQ6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQkJEOERDICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbi5zY2VuYXJpb3MgbGk6aG92ZXIge1xuICBjb2xvcjogIzYwN0Q4QjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0RERDtcbiAgbGVmdDogLjFlbTtcbn1cbi5zY2VuYXJpb3MgLnRleHQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLTNweDtcbn1cbi5zY2VuYXJpb3MgLmJhZGdlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IHNtYWxsO1xuICBjb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDAuOGVtIDAuN2VtIDAgMC43ZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICM2MDdEOEI7XG4gIGxpbmUtaGVpZ2h0OiAxZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogLTFweDtcbiAgdG9wOiAtNHB4O1xuICBoZWlnaHQ6IDEuOGVtO1xuICBtYXJnaW4tcmlnaHQ6IC44ZW07XG4gIGJvcmRlci1yYWRpdXM6IDRweCAwIDAgNHB4O1xufVxuIl19 */\"","module.exports = \"<h2>My Scenarios</h2>\\n<button ng-click=\\\"updateScenarios\\\" class=\\\"button-primary\\\"\\n        (click)=\\\"updateScenarios()\\\">Update scenarios list</button>\\n<ul class=\\\"scenarios\\\">\\n  <li *ngFor=\\\"let scenario of scenarios\\\"\\n    [class.selected]=\\\"scenario.id === selectedId\\\">\\n    <a [routerLink]=\\\"['/scenario', scenario.id]\\\">\\n      <span class=\\\"badge\\\">{{ scenario.id }}</span>{{ scenario.name }}\\n    </a>\\n  </li>\\n</ul>\\n<button ng-click=\\\"newScenario\\\" class=\\\"button-primary\\\">\\n        <a [routerLink]=\\\"['/scenario-new']\\\">New scenario</a>\\n</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Scenario } from './scenario';\nimport { ScenariosService} from \"./scenarios.service\";\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-scenarios',\n  templateUrl: './scenarios.component.html',\n  styleUrls: ['./scenarios.component.css']\n})\n\nexport class ScenariosComponent implements OnInit {\n\n  scenarios: Scenario[];\n  selectedScenario: Scenario;\n  selectedId: number;\n\n  constructor(private scenariosService: ScenariosService,\n              private route: ActivatedRoute) {\n    console.log(\"Constructing scenarios...\");\n  }\n\n  ngOnInit() {\n    console.log(\"Initializing scenarios...\");\n    this.getScenarios();\n  }\n\n  // onSelect(scenario: Scenario): void {\n  //   this.selectedScenario = scenario;\n  // }\n\n  getScenarios(): void {\n    console.log(\"Getting scenarios...\");\n    this.scenariosService.getScenarios()\n      .subscribe(scenarios => this.scenarios = scenarios);\n  }\n\n  updateScenarios(event): void{\n    console.log('Updating scenarios...');\n    this.getScenarios()\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Scenario } from './scenario'\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ScenariosService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  private scenariosURL = 'http://127.0.0.1:8080/scenarios/';\n\n  getScenarios(): Observable<Scenario[]> {\n    console.log(this.http.get<Scenario[]>(this.scenariosURL));\n    return this.http.get<Scenario[]>(this.scenariosURL)\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h2>Settings</h2>\\n<div>\\n    <input class=\\\"u-full-width\\\" size=\\\"50\\\" placeholder=\\\"GridPath folder\\\"\\n  type=\\\"text\\\"\\n           [(ngModel)]=\\\"gridPathFolder\\\">\\n    <button id=\\\"browseGPFolder\\\" class=\\\"button-primary\\\"\\n            (click)=\\\"browseGPFolder()\\\">Browse</button>\\n</div>\\n<div><span>Current GridPath folder setting: </span>{{currentGridPathFolderSetting}}</div>\\n<div>\\n    <input class=\\\"u-full-width\\\" size=\\\"50\\\" placeholder=\\\"GridPath database\\\"\\n           type=\\\"text\\\"\\n           [(ngModel)]=\\\"gridPathDB\\\">\\n    <button id=\\\"browseGPDatabase\\\" class=\\\"button-primary\\\"\\n            (click)=\\\"browseGPDatabase()\\\">Browse</button>\\n</div>\\n<div><span>Current GridPath database setting: </span>{{currentGridPathDatabaseSetting}}</div>\\n<div>\\n    <input class=\\\"u-full-width\\\" size=\\\"50\\\" placeholder=\\\"Python binary\\\"\\n           type=\\\"text\\\"\\n           [(ngModel)]=\\\"pythonBinary\\\">\\n    <button id=\\\"browsePythonBinary\\\" class=\\\"button-primary\\\"\\n            (click)=\\\"browsePythonBinary()\\\">Browse</button>\\n</div>\\n<div><span>Current Python binary setting: </span>{{currentPythonBinarySetting}}</div>\\n\"","import { Component, OnInit, NgZone } from '@angular/core';\nconst electron = (<any>window).require('electron');\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\n\n\nexport class SettingsComponent implements OnInit {\n  // Set the GridPath folder and database settings: we do this by browsing\n  // for the folder/database-file via Electron's 'dialog' functionality. In\n  // order to get the view to update immediately upon selection, we need to\n  // set gridPathFolder/gridPathDB/pythonBinary inside the Angular zone. We are\n  // outside Angular when using 'electron', so we need to explicitly run\n  // inside the Angular zone (using NgZone), but this can only happen in the\n  // 'constructor' method. Therefore, the dialog functionality is included\n  // in the 'constructor' below; here we tell the Electron main that the\n  // user is requesting to select the folder path; the 'constructor' method\n  // includes listeners for the main's response and, on detecting the\n  // response, 1) runs the Electron dialog and 2) sets the selected path\n  // inside the Angular zone.\n  gridPathFolder: Array<string>;\n  browseGPFolder(event) {\n    console.log(\"Request to set GP folder setting...\");\n    electron.ipcRenderer.send('onClickGridPathFolderSetting');\n  }\n\n  gridPathDB: Array<string>;\n  browseGPDatabase(event, zone) {\n    console.log(\"Request to set GP database setting...\");\n    electron.ipcRenderer.send('onClickGridPathDatabaseSetting');\n  }\n\n  pythonBinary: Array<string>;\n  browsePythonBinary(event, zone) {\n    console.log(\"Request to set Python binary setting...\");\n    electron.ipcRenderer.send('onClickPythonBinarySetting');\n  }\n\n  // The current settings from the Electron main\n  currentGridPathFolderSetting: Array<string>;\n  currentGridPathDatabaseSetting: Array<string>;\n  currentPythonBinarySetting: Array<string>;\n\n\n  constructor(private zone: NgZone) {\n    console.log(\"Constructing the settings...\");\n\n    // Get current settings from Electron\n    this.requestStoredSettings();\n    electron.ipcRenderer.on('sendStoredSettings',\n        (event, data) => {\n          console.log('Got stored settings from Electron main');\n          console.log(data);\n\n          zone.run( () => {\n\n            // Handle situation if no value is set\n            if (data['gridPathDirectory']['value'] === null) {\n              this.currentGridPathFolderSetting = null\n            }\n            else {\n              this.currentGridPathFolderSetting =\n                data['gridPathDirectory']['value'][0];\n            }\n\n            if (data['gridPathDatabase']['value'] === null) {\n              this.currentGridPathDatabaseSetting = null\n            }\n            else {\n              this.currentGridPathDatabaseSetting =\n                data['gridPathDatabase']['value'][0];\n            }\n\n            if (data['pythonBinary']['value'] === null) {\n              this.currentPythonBinarySetting = null\n            }\n            else {\n              this.currentPythonBinarySetting =\n                data['pythonBinary']['value'][0];\n            }\n\n          })\n        }\n    );\n\n    // TODO: treatment is very similar for different settings, so could be\n    //  re-factored\n\n    // When a setting button is clicked by sending, a message is first sent\n    // to the Electron main, which then communicates back to the renderer\n    // on the channels included in the 'constructor' method, so that we can\n    // set the paths inside the Angular zone (which can happen in\n    // the 'constructor' method only)\n\n    // Set GridPath folder setting via Electron dialog\n    electron.ipcRenderer.on('onClickGridPathFolderSettingAngular', (event) => {\n\t\t\telectron.remote.dialog.showOpenDialog(\n      {title: 'Select a the GridPath folder', properties: ['openDirectory']},\n      (folderPath) => {\n        if (folderPath === undefined){\n            console.log(\"No folder selected\");\n            return;\n        }\n        // We must run this inside the Angular zone to get Angular to\n        // detect the change and update the view immediately\n        else {\n          // Send Electron the new value\n          console.log(\"Sending GridPath folder setting to Electron\");\n          electron.ipcRenderer.send(\n            \"setGridPathFolderSetting\",\n            folderPath\n          );\n\n          // Ask Electron for the value it stored (double-check value is\n          // the same as what we just selected)\n          this.requestStoredSettings();\n          // Electron responds on this channel\n          electron.ipcRenderer.on('sendStoredSettings',\n            (event, data) => {\n              console.log('Got stored settings from Electron main');\n              console.log(data);\n\n              // Set the new value for currentGridPathFolderSetting in Angular\n              zone.run( () => {\n                if (data['gridPathDirectory']['value'] === null) {\n                  this.currentGridPathFolderSetting = null\n                }\n                else {\n                  this.currentGridPathFolderSetting =\n                    data['gridPathDirectory']['value'][0];\n                }\n                console.log(\n                  `Setting current GP folder to ${this.currentGridPathFolderSetting} in Angular`\n                );\n\n                // Also update the selection box with what we just selected\n                // This provides a visual confirmation that Angular and\n                // Electron are seeing the same value\n                // TODO: write a check that the two values are the same\n                this.gridPathFolder = folderPath;\n              })\n            }\n          );\n        }\n        console.log(`GridPath folder set to ${this.gridPathFolder}`);\n      });\n\t\t});\n\n    // Set GridPath database setting via Electron dialog\n    electron.ipcRenderer.on('onClickGridPathDatabaseSettingAngular',\n        (event) => {\n        electron.remote.dialog.showOpenDialog(\n          {title: 'Select a the GridPath database file',\n          properties: ['openFile']},\n          (dbFilePath) => {\n            if (dbFilePath === undefined){\n                console.log(\"No file selected\");\n                return;\n            }\n            // We must run this inside the Angular zone to get Angular to\n            // detect the change and update the view immediately\n            else {\n              // Send Electron the new value\n              console.log(\"Sending GridPath database setting to Electron\");\n              electron.ipcRenderer.send(\n                \"setGridPathDatabaseSetting\",\n                dbFilePath\n              );\n\n              // Ask Electron for the value it stored (double-check value is\n              // the same as what we just selected)\n              this.requestStoredSettings();\n              // Electron responds on this channel\n              electron.ipcRenderer.on('sendStoredSettings',\n                (event, data) => {\n                  console.log('Got stored settings from Electron main');\n                  console.log(data);\n\n                  // Set the new value for currentGridPathDatabaseSetting in Angular\n                  zone.run( () => {\n                    if (data['gridPathDatabase']['value'] === null) {\n                      this.currentGridPathDatabaseSetting = null\n                    }\n                    else {\n                      this.currentGridPathDatabaseSetting =\n                        data['gridPathDatabase']['value'][0];\n                    }\n                    console.log(\n                      `Setting current GP database to ${this.currentGridPathDatabaseSetting} in Angular`\n                    );\n\n                    // Also update the selection box with what we just selected\n                    // This provides a visual confirmation that Angular and\n                    // Electron are seeing the same value\n                    // TODO: write a check that the two values are the same\n                    this.gridPathDB = dbFilePath;\n                  })\n                }\n              );\n            }\n            console.log(`GridPath database set to ${this.gridPathDB[0]}`);\n          }\n        );\n      }\n    );\n\n\n    // Set Python binary directory setting via Electron dialog\n    electron.ipcRenderer.on('onClickPythonBinarySettingAngular',\n        (event) => {\n        electron.remote.dialog.showOpenDialog(\n          {title: 'Select a the Python binary file',\n          properties: ['openDirectory']},\n          (pythonBinaryPath) => {\n            if (pythonBinaryPath === undefined){\n                console.log(\"No file selected\");\n                return;\n            }\n            // We must run this inside the Angular zone to get Angular to\n            // detect the change and update the view immediately\n            else {\n              // Send Electron the new value\n              console.log(\"Sending Python binary directory setting to\" +\n                \" Electron\");\n              electron.ipcRenderer.send(\n                \"setPythonBinarySetting\", pythonBinaryPath\n              );\n\n              // Ask Electron for the value it stored (double-check value is\n              // the same as what we just selected)\n              this.requestStoredSettings();\n              // Electron responds on this channel\n              electron.ipcRenderer.on('sendStoredSettings',\n                (event, data) => {\n                  console.log('Got stored settings from Electron main');\n                  console.log(data);\n\n                  // Set the new value for currentPythonBinarySetting in Angular\n                  zone.run( () => {\n                    if (data['pythonBinary']['value'] === null) {\n                      this.currentPythonBinarySetting = null\n                    }\n                    else {\n                      this.currentPythonBinarySetting =\n                        data['pythonBinary']['value'][0];\n                    }\n                    console.log(\n                      `Setting current Python binary directory to ${this.currentPythonBinarySetting} in Angular`\n                    );\n\n                    // Also update the selection box with what we just selected\n                    // This provides a visual confirmation that Angular and\n                    // Electron are seeing the same value\n                    // TODO: write a check that the two values are the same\n                    this.pythonBinary = pythonBinaryPath;\n                  })\n                }\n              );\n            }\n            console.log(`Python binary set to ${this.pythonBinary[0]}`);\n          }\n        );\n      }\n    );\n  }\n\n\n\n  ngOnInit() {\n    console.log(\"Initializing settings...\")\n  }\n\n  requestStoredSettings() {\n    console.log('Requesting stored settings from Electron main...');\n    electron.ipcRenderer.send('requestStoredSettings')\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}